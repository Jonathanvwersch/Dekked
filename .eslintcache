[{"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\NavigationBar\\NavBar.js":"1","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Block.js":"2","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\NavigationBar\\AddBlock.js":"3","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\NavigationBar\\DropBlock.js":"4","C:\\Users\\jonat\\dekked-nav-bar\\src\\index.js":"5","C:\\Users\\jonat\\dekked-nav-bar\\src\\App.js":"6","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Portal.js":"7","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\NavigationBar\\ColourPicker.js":"8","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\NavigationBar\\DropdownMenuData.js":"9"},{"size":5135,"mtime":1607425473838,"results":"10","hashOfConfig":"11"},{"size":917,"mtime":1607425439548,"results":"12","hashOfConfig":"11"},{"size":332,"mtime":1606924253439,"results":"13","hashOfConfig":"11"},{"size":6118,"mtime":1607426572579,"results":"14","hashOfConfig":"11"},{"size":339,"mtime":1607348165783,"results":"15","hashOfConfig":"11"},{"size":206,"mtime":1606991699389,"results":"16","hashOfConfig":"11"},{"size":691,"mtime":1607109177712,"results":"17","hashOfConfig":"11"},{"size":854,"mtime":1607338729553,"results":"18","hashOfConfig":"11"},{"size":1935,"mtime":1607425228470,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mc2jll",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\NavigationBar\\NavBar.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Block.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\NavigationBar\\AddBlock.js",["39"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\NavigationBar\\DropBlock.js",["40"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport * as Icons from \"react-icons/md\";\r\nimport \"./DropBlock.css\";\r\nimport ColourPicker from \"./ColourPicker\";\r\nimport Block from \"../General/Block\";\r\nimport Portal from \"../General/Portal\";\r\nimport { ReactComponent as FolderIcon } from \"../../custom-icons/folder.svg\";\r\nimport { ReactComponent as BinderIcon } from \"../../custom-icons/binder.svg\";\r\nimport { ReactComponent as StudySetIcon } from \"../../custom-icons/studyset.svg\";\r\n\r\nfunction DropBlock({\r\n  type,\r\n  handleDelete,\r\n  handleAddItem,\r\n  id,\r\n  dropdownMenudata,\r\n}) {\r\n  const [coords, setCoords] = useState({});\r\n  const [dropdownMenu, setDropdownMenu] = useState(false);\r\n  const [height, setHeight] = useState(window.innerHeight);\r\n  const [editableName, setEditableName] = useState(false);\r\n  const [colourPicker, setColourPicker] = useState(false);\r\n  const [yPositionOfDropdownMenu, setYPositionofDropdownMenu] = useState();\r\n  const [iconColour, setIconColour] = useState(\"#2C2C31\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const ref = useRef(null);\r\n\r\n  const heightOfDropdownMenu = 30 * dropdownMenudata.length;\r\n  const heightOfSketchPicker = 220;\r\n\r\n  const positionComponents = (e, itemHeight) => {\r\n    const rect = e.target.getBoundingClientRect();\r\n    let bottomValue = height - rect.y;\r\n    let topValue = rect.y + window.scrollY;\r\n    setYPositionofDropdownMenu(topValue);\r\n\r\n    if (\r\n      bottomValue < 1.1 * heightOfSketchPicker &&\r\n      topValue > heightOfSketchPicker\r\n    )\r\n      setYPositionofDropdownMenu(topValue - heightOfSketchPicker - 10);\r\n\r\n    if (bottomValue < 1.4 * itemHeight && topValue > itemHeight) {\r\n      topValue = rect.y - itemHeight - 10;\r\n    }\r\n\r\n    setCoords({\r\n      left: rect.x + rect.width / 2,\r\n      top: topValue,\r\n    });\r\n  };\r\n\r\n  const handleIsOpen = () => {\r\n    setIsOpen((prevState) => !prevState);\r\n  };\r\n\r\n  const handleColourPicker = () => {\r\n    const newCoords = {\r\n      left: coords.left,\r\n      top: yPositionOfDropdownMenu,\r\n    };\r\n    setCoords(newCoords);\r\n    setColourPicker((prevState) => !prevState);\r\n  };\r\n\r\n  const handleRename = () => {\r\n    setEditableName((prevValue) => !prevValue);\r\n    var div = document.querySelector(`p[id=\"${id}\"]`);\r\n    setTimeout(function () {\r\n      div.focus();\r\n    }, 0);\r\n  };\r\n\r\n  const handleDropdownMenu = (e) => {\r\n    positionComponents(e, heightOfDropdownMenu);\r\n    setDropdownMenu((prevState) => !prevState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const updateEditableName = (e) => {\r\n      let fileName = document.querySelector(`p[id=\"${id}\"]`);\r\n      if (fileName) {\r\n        fileName.addEventListener(\r\n          \"blur\",\r\n          function (e) {\r\n            this.scrollLeft = \"0px\";\r\n          },\r\n          true\r\n        );\r\n      }\r\n      if (editableName === true) {\r\n        if (!ref.current.contains(e.target)) {\r\n          setEditableName((prevValue) => !prevValue);\r\n        }\r\n      }\r\n    };\r\n    document.addEventListener(\"click\", updateEditableName);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"click\", updateEditableName);\r\n    };\r\n  }, [editableName]);\r\n\r\n  useEffect(() => {\r\n    const updateWindowDimensions = () => {\r\n      const newHeight = window.innerHeight;\r\n      setHeight(newHeight);\r\n    };\r\n\r\n    window.addEventListener(\"resize\", updateWindowDimensions);\r\n\r\n    return () => window.removeEventListener(\"resize\", updateWindowDimensions);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"DropBlock\">\r\n      <div\r\n        className={\r\n          isOpen\r\n            ? `icon ${type} dropDownArrow down`\r\n            : `icon ${type} dropDownArrow right`\r\n        }\r\n        onClick={() => {\r\n          // setShowBinderBlocks((prevState) => !prevState);\r\n          handleIsOpen();\r\n        }}\r\n      >\r\n        {type !== \"studySet\" ? <Icons.MdArrowDropDown /> : null}\r\n      </div>\r\n      <div className={`icon ${type}`}>\r\n        {type === \"folder\" ? (\r\n          <FolderIcon fill={iconColour} />\r\n        ) : type === \"binder\" ? (\r\n          <BinderIcon stroke={iconColour} />\r\n        ) : (\r\n          <StudySetIcon stroke={iconColour} />\r\n        )}\r\n      </div>\r\n      <p\r\n        ref={ref}\r\n        id={id}\r\n        spellCheck=\"false\"\r\n        onKeyPress={(e) => {\r\n          if (e.key === \"Enter\") {\r\n            e.preventDefault();\r\n          }\r\n        }}\r\n        contentEditable={editableName}\r\n        className=\"p2\"\r\n      ></p>\r\n      <Icons.MdMoreHoriz\r\n        className=\"icon dots\"\r\n        onClick={(e) => {\r\n          handleDropdownMenu(e);\r\n        }}\r\n      ></Icons.MdMoreHoriz>\r\n      {dropdownMenu ? (\r\n        <Portal\r\n          state={dropdownMenu}\r\n          handleState={() => setDropdownMenu((prevState) => !prevState)}\r\n        >\r\n          <div\r\n            onClick={() => setDropdownMenu((prevState) => !prevState)}\r\n            className=\"DropdownMenu\"\r\n            style={{ ...styles.popover, ...coords }}\r\n          >\r\n            {dropdownMenudata.map((item, index) => {\r\n              return (\r\n                <Block\r\n                  handleDelete={handleDelete}\r\n                  handleRename={handleRename}\r\n                  handleColourPicker={handleColourPicker}\r\n                  handleAddItem={handleAddItem}\r\n                  setDropdownArrow={setIsOpen}\r\n                  item={item}\r\n                  id={`${item} Block ${index}`}\r\n                  key={`${item} Block ${index}`}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </Portal>\r\n      ) : null}\r\n      {colourPicker ? (\r\n        <Portal state={colourPicker} handleState={handleColourPicker}>\r\n          <div\r\n            style={{ ...styles.popover, ...coords }}\r\n            className=\"colourPicker\"\r\n          >\r\n            <ColourPicker\r\n              iconColour={iconColour}\r\n              setIconColour={setIconColour}\r\n            ></ColourPicker>\r\n          </div>\r\n        </Portal>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  popover: {\r\n    position: \"absolute\",\r\n    transform: \"translate(0, 15px)\",\r\n  },\r\n};\r\n\r\nexport default DropBlock;\r\n","C:\\Users\\jonat\\dekked-nav-bar\\src\\index.js",["41"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\App.js",["42"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Portal.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\NavigationBar\\ColourPicker.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\NavigationBar\\DropdownMenuData.js",[],{"ruleId":"43","severity":1,"message":"44","line":1,"column":17,"nodeType":"45","messageId":"46","endLine":1,"endColumn":25},{"ruleId":"47","severity":1,"message":"48","line":103,"column":6,"nodeType":"49","endLine":103,"endColumn":20,"suggestions":"50"},{"ruleId":"43","severity":1,"message":"51","line":6,"column":9,"nodeType":"45","messageId":"46","endLine":6,"endColumn":20},{"ruleId":"43","severity":1,"message":"44","line":2,"column":17,"nodeType":"45","messageId":"46","endLine":2,"endColumn":25},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["52"],"'createStore' is defined but never used.",{"desc":"53","fix":"54"},"Update the dependencies array to be: [editableName, id]",{"range":"55","text":"56"},[3133,3147],"[editableName, id]"]