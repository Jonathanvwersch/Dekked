[{"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\TopBar.js":"1","C:\\Users\\jonat\\dekked-nav-bar\\src\\App.js":"2","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlock.js":"3","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\MainFrame.js":"4","C:\\Users\\jonat\\dekked-nav-bar\\src\\index.js":"5","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlockMenuData.js":"6","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\ProfileData.js":"7","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Buttons\\Button.js":"8","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Block.js":"9","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Portal.js":"10","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Settings.js":"11","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\Sidebar.js":"12","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\StudyQueue.js":"13","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\Card.js":"14","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\AddCard.js":"15","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\FolderBinder.js":"16","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetNotes.js":"17","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\ChangePassword.js":"18","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\SettingsData.js":"19","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Account.js":"20","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Toolbar.js":"21","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\ColourPicker.js":"22","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetFlashcards.js":"23","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySet.js":"24","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Flashcard.js":"25","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\LinkedFlashcard.js":"26","C:\\Users\\jonat\\dekked-nav-bar\\src\\reportWebVitals.js":"27","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\TextBlockDataFull.js":"28","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\TextBlockDataHalf.js":"29","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DeleteBlock.js":"30","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\DeleteModal.js":"31"},{"size":7052,"mtime":1608740134985,"results":"32","hashOfConfig":"33"},{"size":3674,"mtime":1608848396301,"results":"34","hashOfConfig":"33"},{"size":8296,"mtime":1608657672061,"results":"35","hashOfConfig":"33"},{"size":2416,"mtime":1608720412916,"results":"36","hashOfConfig":"33"},{"size":304,"mtime":1608373640131,"results":"37","hashOfConfig":"33"},{"size":1586,"mtime":1608751880302,"results":"38","hashOfConfig":"33"},{"size":578,"mtime":1607615529159,"results":"39","hashOfConfig":"33"},{"size":279,"mtime":1608653790741,"results":"40","hashOfConfig":"33"},{"size":1202,"mtime":1608757007125,"results":"41","hashOfConfig":"33"},{"size":1707,"mtime":1608658084464,"results":"42","hashOfConfig":"33"},{"size":1500,"mtime":1607975279825,"results":"43","hashOfConfig":"33"},{"size":18668,"mtime":1608890971995,"results":"44","hashOfConfig":"33"},{"size":1745,"mtime":1608626883226,"results":"45","hashOfConfig":"33"},{"size":972,"mtime":1608659391947,"results":"46","hashOfConfig":"33"},{"size":303,"mtime":1608659079923,"results":"47","hashOfConfig":"33"},{"size":6772,"mtime":1608823963399,"results":"48","hashOfConfig":"33"},{"size":719,"mtime":1608660748099,"results":"49","hashOfConfig":"33"},{"size":1011,"mtime":1607766673139,"results":"50","hashOfConfig":"33"},{"size":310,"mtime":1607681517857,"results":"51","hashOfConfig":"33"},{"size":1947,"mtime":1608043484373,"results":"52","hashOfConfig":"33"},{"size":2510,"mtime":1608717526400,"results":"53","hashOfConfig":"33"},{"size":875,"mtime":1608654178746,"results":"54","hashOfConfig":"33"},{"size":1025,"mtime":1608715499849,"results":"55","hashOfConfig":"33"},{"size":8238,"mtime":1608720391310,"results":"56","hashOfConfig":"33"},{"size":757,"mtime":1608717569209,"results":"57","hashOfConfig":"33"},{"size":1642,"mtime":1608730141216,"results":"58","hashOfConfig":"33"},{"size":362,"mtime":1606127062191,"results":"59","hashOfConfig":"33"},{"size":1314,"mtime":1608650149632,"results":"60","hashOfConfig":"33"},{"size":535,"mtime":1608650078744,"results":"61","hashOfConfig":"33"},{"size":2068,"mtime":1608822698708,"results":"62","hashOfConfig":"33"},{"size":640,"mtime":1608802412208,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mc2jll",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\TopBar.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\App.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlock.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\MainFrame.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\index.js",[],["131","132"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlockMenuData.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\ProfileData.js",["133"],"import React from \"react\";\r\nimport {MdSettings} from \"react-icons/md\";\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport logoutIcon from '@iconify/icons-mdi/logout';\r\n\r\n\r\n// declare global variables\r\nconst SETTINGS = \"Settings\"\r\nconst LOGOUT = \"Log out\"\r\n\r\nexport const ProfileData = [\r\n  {\r\n    action: SETTINGS,\r\n    icon: (\r\n      <div className=\"icon settings\">\r\n        <MdSettings/>\r\n      </div>\r\n    ),\r\n  },\r\n\r\n  {\r\n    action: LOGOUT,\r\n    icon: (\r\n      <div className=\"icon logout\">\r\n        <Icon icon={logoutIcon} />\r\n      </div>\r\n    ),\r\n  },\r\n\r\n];\r\n\r\n","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Buttons\\Button.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Block.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Portal.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Settings.js",[],["134","135"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\StudyQueue.js",["136","137"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\Card.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\AddCard.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\FolderBinder.js",["138"],"import React, { useEffect, useRef } from \"react\";\r\nimport \"./FolderBinder.css\";\r\nimport AddCard from \"./AddCard\";\r\nimport { useLocation, withRouter } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Card from \"./Card\";\r\nimport Button from \"../../Buttons/Button\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction FolderBinder({ folderBlocks, handleFolderBlocks, handleNameChange }) {\r\n  let location = useLocation();\r\n  const titleRef = useRef();\r\n\r\n  const addBinder = (folderIndex) => {\r\n    const newBinder = {\r\n      name: \"\",\r\n      type: \"binder\",\r\n      id: uuidv4(),\r\n      folderId: folderBlocks[folderIndex].id,\r\n      iconColour: \"#2C2C31\",\r\n      isOpen: false,\r\n      studySets: [],\r\n    };\r\n    const newFolderBlocksArray = folderBlocks.slice();\r\n    newFolderBlocksArray[folderIndex].isOpen = true;\r\n    newFolderBlocksArray[folderIndex].binders.push(newBinder);\r\n    handleFolderBlocks(newFolderBlocksArray);\r\n  };\r\n\r\n  const addStudySet = (folderIndex, binderIndex) => {\r\n    const newStudySet = {\r\n      name: \"\",\r\n      type: \"studySet\",\r\n      id: uuidv4(),\r\n      binderId: folderBlocks[folderIndex].binders[binderIndex].id,\r\n      folderId: folderBlocks[folderIndex].id,\r\n      iconColour: \"#2C2C31\",\r\n      tab: \"notes\",\r\n    };\r\n    const newFolderBlocksArray = folderBlocks.slice();\r\n    newFolderBlocksArray[folderIndex].binders[binderIndex].studySets.push(\r\n      newStudySet\r\n    );\r\n\r\n    newFolderBlocksArray[folderIndex].binders[binderIndex].isOpen = true;\r\n    handleFolderBlocks(newFolderBlocksArray);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (location.state && document.activeElement !== titleRef.current) {\r\n      if (location.state.type === \"folder\") {\r\n        titleRef.current.innerText =\r\n          folderBlocks[location.state.folderIndex].name;\r\n      } else if (location.state.type === \"binder\") {\r\n        titleRef.current.innerText =\r\n          folderBlocks[location.state.folderIndex].binders[\r\n            location.state.binderIndex\r\n          ].name;\r\n      } else if (location.state.type === \"studySet\") {\r\n        titleRef.current.innerText =\r\n          folderBlocks[location.state.folderIndex].binders[\r\n            location.state.binderIndex\r\n          ].studySets[location.state.studySetIndex].name;\r\n      }\r\n    }\r\n  }, [folderBlocks, location.state]);\r\n\r\n  return (\r\n    <div className=\"dekked-folderBinder\">\r\n      {location.state ? (\r\n        <>\r\n          <div className=\"dekked-pageHeaderContainer\">\r\n            <div className=\"dekked-pageHeader\">\r\n              <h2\r\n                className=\"dekked-page-title\"\r\n                contentEditable={true}\r\n                ref={titleRef}\r\n                spellCheck={false}\r\n                onKeyDown={(e) => {\r\n                  if (location.state) {\r\n                    if (e.key === \"Enter\") {\r\n                      e.preventDefault();\r\n                    }\r\n                    setTimeout(function () {\r\n                      handleNameChange(\r\n                        location.state.type,\r\n                        location.state.folderIndex,\r\n                        location.state.binderIndex,\r\n                        location.state.studySetIndex,\r\n                        titleRef.current.innerText\r\n                      );\r\n                    }, 100);\r\n                  }\r\n                }}\r\n              ></h2>\r\n              <div className=\"buttonQuantity\">\r\n                <p className=\"p2 quantity\">\r\n                  {location.state\r\n                    ? location.state.type === \"folder\"\r\n                      ? `${\r\n                          folderBlocks[location.state.folderIndex].binders\r\n                            .length\r\n                        } Binder(s)`\r\n                      : `${\r\n                          folderBlocks[location.state.folderIndex].binders[\r\n                            location.state.binderIndex\r\n                          ].studySets.length\r\n                        } Study set(s)`\r\n                    : null}\r\n                </p>\r\n                <Button type=\"primary\" action=\"Study\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"dekked-pageContentContainer\">\r\n            <div className=\"dekked-pageContent\">\r\n              <AddCard\r\n                handleClick={() => {\r\n                  location.state.type === \"folder\"\r\n                    ? addBinder(location.state.folderIndex)\r\n                    : addStudySet(\r\n                        location.state.folderIndex,\r\n                        location.state.binderIndex\r\n                      );\r\n                }}\r\n              />\r\n              {location.state.type === \"folder\"\r\n                ? folderBlocks[location.state.folderIndex].binders.map(\r\n                    (item, index) => (\r\n                      <NavLink\r\n                        to={{\r\n                          pathname: `/${item.type}/${item.id}`,\r\n                          state: {\r\n                            type: item.type,\r\n                            name: item.name,\r\n                            folderIndex: location.state.folderIndex,\r\n                            binderIndex: index,\r\n                          },\r\n                        }}\r\n                      >\r\n                        <Card\r\n                          key={uuidv4()}\r\n                          name={item.name ? item.name : \"Untitled\"}\r\n                          type={item.type}\r\n                          iconColour={item.iconColour}\r\n                        />\r\n                      </NavLink>\r\n                    )\r\n                  )\r\n                : folderBlocks[location.state.folderIndex].binders[\r\n                    location.state.binderIndex\r\n                  ].studySets.map((item, index) => (\r\n                    <NavLink\r\n                      to={{\r\n                        pathname: `/${item.type}/${item.tab}/${item.id}`,\r\n                        state: {\r\n                          type: item.type,\r\n                          name: item.name,\r\n                          folderIndex: location.state.folderIndex,\r\n                          binderIndex: location.state.binderIndex,\r\n                          studySetIndex: index,\r\n                          tab: item.tab,\r\n                        },\r\n                      }}\r\n                    >\r\n                      <Card\r\n                        key={uuidv4()}\r\n                        name={item.name ? item.name : \"Untitled\"}\r\n                        type={item.type}\r\n                        iconColour={item.iconColour}\r\n                      />\r\n                    </NavLink>\r\n                  ))}\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(FolderBinder);\r\n","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetNotes.js",["139","140"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\ChangePassword.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\SettingsData.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Account.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Toolbar.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\ColourPicker.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetFlashcards.js",["141"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySet.js",["142"],"import \"./StudySet.css\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport Toolbar from \"../StudySet/Toolbar\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport StudySetNotes from \"./StudySetNotes\";\r\nimport StudySetFlashcards from \"./StudySetFlashcards\";\r\nimport Button from \"../../Buttons/Button\";\r\nimport LinkedFlashcard from \"./LinkedFlashcard\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction StudySet({\r\n  folderBlocks,\r\n  handleNameChange,\r\n  handleFolderBlocks,\r\n  sidebar,\r\n}) {\r\n  let location = useLocation();\r\n  const titleRef = useRef();\r\n\r\n  const [flashcards, setFlashcards] = useState([]);\r\n\r\n  const handleFlashcards = (newFlashcardsArray) => {\r\n    setFlashcards(newFlashcardsArray);\r\n  };\r\n\r\n  const addFlashcard = () => {\r\n    const newFlashcard = {\r\n      id: uuidv4(),\r\n    };\r\n    let flashcardsArray = flashcards.slice();\r\n    flashcardsArray.unshift(newFlashcard);\r\n    handleFlashcards(flashcardsArray);\r\n    console.log(flashcards);\r\n  };\r\n\r\n  const deleteFlashcard = (index) => {\r\n    let flashcardsArray = flashcards.slice();\r\n    flashcardsArray.splice(index, 1);\r\n    setFlashcards(flashcardsArray);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (location.state && document.activeElement !== titleRef.current) {\r\n      if (location.state.type === \"folder\") {\r\n        titleRef.current.innerText =\r\n          folderBlocks[location.state.folderIndex].name;\r\n      } else if (location.state.type === \"binder\") {\r\n        titleRef.current.innerText =\r\n          folderBlocks[location.state.folderIndex].binders[\r\n            location.state.binderIndex\r\n          ].name;\r\n      } else if (location.state.type === \"studySet\") {\r\n        titleRef.current.innerText =\r\n          folderBlocks[location.state.folderIndex].binders[\r\n            location.state.binderIndex\r\n          ].studySets[location.state.studySetIndex].name;\r\n      }\r\n    }\r\n  }, [folderBlocks, location.state]);\r\n\r\n  return (\r\n    <div className=\"dekked-studySet\">\r\n      {location.state ? (\r\n        <>\r\n          <div className=\"dekked-pageHeaderContainer\">\r\n            <div className=\"dekked-pageHeader\">\r\n              <div className=\"toolbarTab\">\r\n                {location.state && location.state.tab === \"notes\" ? (\r\n                  <Toolbar type=\"full\" />\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n                <div id=\"studySetSwitcher\">\r\n                  {location.state ? (\r\n                    <>\r\n                      <NavLink\r\n                        activeStyle={{\r\n                          textDecoration: \"underline\",\r\n                          textDecorationColor: \"var(--primary-color)\",\r\n                          color: \"var(--main-black)\",\r\n                          fontWeight: \"700\",\r\n                          textDecorationThickness: \"2px\",\r\n                        }}\r\n                        to={{\r\n                          pathname: `/studySet/notes/${\r\n                            folderBlocks[location.state.folderIndex].binders[\r\n                              location.state.binderIndex\r\n                            ].studySets[location.state.studySetIndex].id\r\n                          }`,\r\n                          state: {\r\n                            name: location.state.name,\r\n                            type: location.state.type,\r\n                            folderIndex: location.state.folderIndex,\r\n                            binderIndex: location.state.binderIndex,\r\n                            studySetIndex: location.state.studySetIndex,\r\n                            tab: \"notes\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <p\r\n                          style={{\r\n                            marginRight: \"24px\",\r\n                          }}\r\n                          className=\"p1\"\r\n                        >\r\n                          Notes\r\n                        </p>\r\n                      </NavLink>\r\n\r\n                      <NavLink\r\n                        activeStyle={{\r\n                          textDecoration: \"underline\",\r\n                          textDecorationColor: \"var(--primary-color)\",\r\n                          color: \"var(--main-black)\",\r\n                          fontWeight: \"700\",\r\n                          textDecorationThickness: \"2px\",\r\n                        }}\r\n                        to={{\r\n                          pathname: `/studySet/flashcards/${\r\n                            folderBlocks[location.state.folderIndex].binders[\r\n                              location.state.binderIndex\r\n                            ].studySets[location.state.studySetIndex].id\r\n                          }`,\r\n                          state: {\r\n                            name: location.state.name,\r\n                            type: location.state.type,\r\n                            folderIndex: location.state.folderIndex,\r\n                            binderIndex: location.state.binderIndex,\r\n                            studySetIndex: location.state.studySetIndex,\r\n                            tab: \"flashcards\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <p className=\"p1\">Flashcards</p>\r\n                      </NavLink>\r\n                    </>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n              <div className=\"dekked-studySetPageTitle\">\r\n                <h2\r\n                  contentEditable={true}\r\n                  ref={titleRef}\r\n                  spellCheck={false}\r\n                  onKeyDown={(e) => {\r\n                    if (location.state) {\r\n                      if (e.key === \"Enter\") {\r\n                        e.preventDefault();\r\n                      }\r\n                      setTimeout(function () {\r\n                        handleNameChange(\r\n                          location.state.type,\r\n                          location.state.folderIndex,\r\n                          location.state.binderIndex,\r\n                          location.state.studySetIndex,\r\n                          titleRef.current.innerText\r\n                        );\r\n                      }, 100);\r\n                    }\r\n                  }}\r\n                ></h2>\r\n              </div>\r\n              {location.state.tab === \"flashcards\" ? (\r\n                <div className=\"buttonQuantity\">\r\n                  <p\r\n                    className=\"p2\"\r\n                    style={{ color: \"var(--grey-2)\", userSelect: \"none\" }}\r\n                  >\r\n                    {`${flashcards.length} Flashcard(s)`}\r\n                  </p>\r\n                  <div className=\"dekked-studySetPageButtons\">\r\n                    <div style={{ marginRight: \"32px\" }}>\r\n                      <Button\r\n                        handleClick={addFlashcard}\r\n                        type=\"secondary\"\r\n                        action=\"Add flashcard\"\r\n                      />\r\n                    </div>\r\n                    <Button type=\"primary\" action=\"Study\" />\r\n                  </div>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"dekked-pageContentContainer\">\r\n            <div className=\"dekked-pageContent\">\r\n              {location.state.tab === \"notes\" ? (\r\n                <>\r\n                  <StudySetNotes\r\n                    handleFolderBlocks={handleFolderBlocks}\r\n                    folderBlocks={folderBlocks}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <StudySetFlashcards\r\n                  handleFolderBlocks={handleFolderBlocks}\r\n                  folderBlocks={folderBlocks}\r\n                  flashcards={flashcards}\r\n                  handleFlashcards={handleFlashcards}\r\n                  deleteFlashcard={deleteFlashcard}\r\n                />\r\n              )}\r\n            </div>\r\n            {location.state.tab === \"notes\" ? (\r\n              <div className=\"linkedFlashcard\">\r\n                <LinkedFlashcard sidebar={sidebar} />\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StudySet;\r\n","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Flashcard.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\LinkedFlashcard.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\reportWebVitals.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\TextBlockDataFull.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\TextBlockDataHalf.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DeleteBlock.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\DeleteModal.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":3,"column":16,"nodeType":"149","messageId":"150","endLine":3,"endColumn":26},{"ruleId":"143","replacedBy":"151"},{"ruleId":"145","replacedBy":"152"},{"ruleId":"147","severity":1,"message":"153","line":10,"column":23,"nodeType":"149","messageId":"150","endLine":10,"endColumn":37},{"ruleId":"147","severity":1,"message":"154","line":11,"column":25,"nodeType":"149","messageId":"150","endLine":11,"endColumn":41},{"ruleId":"155","severity":1,"message":"156","line":74,"column":15,"nodeType":"157","endLine":95,"endColumn":16},{"ruleId":"147","severity":1,"message":"158","line":1,"column":28,"nodeType":"149","messageId":"150","endLine":1,"endColumn":34},{"ruleId":"159","severity":1,"message":"160","line":17,"column":6,"nodeType":"161","endLine":17,"endColumn":22,"suggestions":"162"},{"ruleId":"159","severity":1,"message":"160","line":23,"column":6,"nodeType":"161","endLine":23,"endColumn":22,"suggestions":"163"},{"ruleId":"155","severity":1,"message":"156","line":142,"column":17,"nodeType":"157","endLine":162,"endColumn":18},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'InlineIcon' is defined but never used.","Identifier","unusedVar",["164"],["165"],"'setButtonState' is assigned a value but never used.","'setNotifications' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleTab'. Either include it or remove the dependency array.","ArrayExpression",["166"],["167"],"no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},{"desc":"168","fix":"170"},"Update the dependencies array to be: [handleTab, location.state]",{"range":"171","text":"172"},{"range":"173","text":"172"},[644,660],"[handleTab, location.state]",[732,748]]