[{"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\TopBar.js":"1","C:\\Users\\jonat\\dekked-nav-bar\\src\\App.js":"2","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlock.js":"3","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\MainFrame.js":"4","C:\\Users\\jonat\\dekked-nav-bar\\src\\index.js":"5","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlockMenuData.js":"6","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\ProfileData.js":"7","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Buttons\\Button.js":"8","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Block.js":"9","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Portal.js":"10","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Settings.js":"11","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\Sidebar.js":"12","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\StudyQueue.js":"13","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\Card.js":"14","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\AddCard.js":"15","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\FolderBinder.js":"16","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetNotes.js":"17","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\ChangePassword.js":"18","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\SettingsData.js":"19","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Account.js":"20","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Toolbar.js":"21","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\ColourPicker.js":"22","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetFlashcards.js":"23","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySet.js":"24"},{"size":6905,"mtime":1608473735035,"results":"25","hashOfConfig":"26"},{"size":2744,"mtime":1608547698035,"results":"27","hashOfConfig":"26"},{"size":8456,"mtime":1608377270774,"results":"28","hashOfConfig":"26"},{"size":2692,"mtime":1608548201036,"results":"29","hashOfConfig":"26"},{"size":304,"mtime":1608373640131,"results":"30","hashOfConfig":"26"},{"size":2097,"mtime":1607695867515,"results":"31","hashOfConfig":"26"},{"size":578,"mtime":1607615529159,"results":"32","hashOfConfig":"26"},{"size":324,"mtime":1608455960845,"results":"33","hashOfConfig":"26"},{"size":1098,"mtime":1608372590428,"results":"34","hashOfConfig":"26"},{"size":1748,"mtime":1607766924730,"results":"35","hashOfConfig":"26"},{"size":1500,"mtime":1607975279825,"results":"36","hashOfConfig":"26"},{"size":14550,"mtime":1608544504144,"results":"37","hashOfConfig":"26"},{"size":1732,"mtime":1608451961041,"results":"38","hashOfConfig":"26"},{"size":1012,"mtime":1608452039441,"results":"39","hashOfConfig":"26"},{"size":323,"mtime":1608451853157,"results":"40","hashOfConfig":"26"},{"size":6660,"mtime":1608549284824,"results":"41","hashOfConfig":"26"},{"size":744,"mtime":1608548260263,"results":"42","hashOfConfig":"26"},{"size":1011,"mtime":1607766673139,"results":"43","hashOfConfig":"26"},{"size":310,"mtime":1607681517857,"results":"44","hashOfConfig":"26"},{"size":1947,"mtime":1608043484373,"results":"45","hashOfConfig":"26"},{"size":1314,"mtime":1608451897964,"results":"46","hashOfConfig":"26"},{"size":824,"mtime":1608034457166,"results":"47","hashOfConfig":"26"},{"size":760,"mtime":1608549204451,"results":"48","hashOfConfig":"26"},{"size":6705,"mtime":1608547493786,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mc2jll",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"79"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\TopBar.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\App.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlock.js",["107","108"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport * as Icons from \"react-icons/md\";\r\nimport \"./DropBlock.css\";\r\nimport ColourPicker from \"./ColourPicker\";\r\nimport Block from \"../General/Block\";\r\nimport Portal from \"../General/Portal\";\r\nimport { ReactComponent as FolderIcon } from \"../../custom-icons/folder.svg\";\r\nimport { ReactComponent as BinderIcon } from \"../../custom-icons/binder.svg\";\r\nimport { ReactComponent as StudySetIcon } from \"../../custom-icons/studyset.svg\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nfunction DropBlock({\r\n  type,\r\n  handleDelete,\r\n  handleAddItem,\r\n  id,\r\n  isExpanded,\r\n  isOpen,\r\n  dropBlockMenuData,\r\n  handleNameChange,\r\n  folderIndex,\r\n  binderIndex,\r\n  studySetIndex,\r\n  handleIconColour,\r\n  folderBlocks,\r\n}) {\r\n  const [coords, setCoords] = useState({}); // Set mouse coordinates\r\n  const [dropdownMenu, setDropdownMenu] = useState(false); // Set dropdown menu visibility\r\n  const [editableName, setEditableName] = useState(false); // Set name of dropblock to be editable so that you can rename block\r\n  const [colourPicker, setColourPicker] = useState(false); // Set visibility of colour picker component\r\n  const [yPositionOfDropdownMenu, setYPositionofDropdownMenu] = useState(); // Set y position of dropdown menu\r\n  const [iconColour, setIconColour] = useState(\"#2C2C31\"); // Set colour of icons (necessary to change colours using colour picker)\r\n\r\n  const nameRef = useRef(null); // Reference name of block to deactivate focus after renaming block\r\n\r\n  const heightOfDropdownMenu = 30 * dropBlockMenuData.length; // Value is necessary to position dropdown menu based on mouse coordinates\r\n  const heightOfColourPicker = 220; // Value is necessary to position colour picker based on mouse coordinates\r\n\r\n  // Position portal components based on mouse coordinates\r\n  const positionComponents = (e, itemHeight) => {\r\n    const rect = e.target.getBoundingClientRect();\r\n    let bottomValue = window.innerHeight - rect.y; // distance from mouse click to bottom of window\r\n    let topValue = rect.y; // distance from mouse click to top of window\r\n    setYPositionofDropdownMenu(topValue);\r\n\r\n    if (\r\n      bottomValue < 1.5 * heightOfColourPicker &&\r\n      topValue > heightOfColourPicker\r\n    )\r\n      setYPositionofDropdownMenu(topValue - heightOfColourPicker - 10);\r\n\r\n    if (bottomValue < 1.4 * itemHeight && topValue > itemHeight) {\r\n      topValue = rect.y - itemHeight - 10;\r\n    }\r\n\r\n    setCoords({\r\n      left: rect.x + rect.width / 2,\r\n      top: topValue,\r\n    });\r\n  };\r\n\r\n  const handleColourPicker = () => {\r\n    const newCoords = {\r\n      left: coords.left,\r\n      top: yPositionOfDropdownMenu,\r\n    };\r\n    setCoords(newCoords);\r\n    setColourPicker((prevState) => !prevState);\r\n    handleIconColour(type, folderIndex, binderIndex, studySetIndex, iconColour);\r\n  };\r\n\r\n  const handleRename = () => {\r\n    // Focus in on name of dropblock when being renamed (i.e. show text cursor)\r\n    var div = document.querySelector(`p[id=\"${id}\"]`);\r\n    setTimeout(function () {\r\n      setEditableName((prevValue) => !prevValue);\r\n      div.focus();\r\n    }, 0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editableName === false) {\r\n      if (type === \"folder\") {\r\n        nameRef.current.innerText = folderBlocks[folderIndex].name;\r\n      } else if (type === \"binder\") {\r\n        nameRef.current.innerText =\r\n          folderBlocks[folderIndex].binders[binderIndex].name;\r\n      } else if (type === \"studySet\") {\r\n        nameRef.current.innerText =\r\n          folderBlocks[folderIndex].binders[binderIndex].studySets[\r\n            studySetIndex\r\n          ].name;\r\n      }\r\n    }\r\n  }, [folderBlocks]);\r\n\r\n  const handleDropdownMenu = (e) => {\r\n    positionComponents(e, heightOfDropdownMenu);\r\n    setDropdownMenu((prevState) => !prevState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const updateEditableName = (e) => {\r\n      // When user clicks away from name, make sure the beginning of the name is shown\r\n      let fileName = document.querySelector(`p[id=\"${id}\"]`);\r\n      if (fileName) {\r\n        fileName.addEventListener(\r\n          \"blur\",\r\n          function (e) {\r\n            this.scrollLeft = \"0px\";\r\n          },\r\n          true\r\n        );\r\n      }\r\n\r\n      // If user clicks outside of name of dropblock, turn off editability of name\r\n      if (editableName === true) {\r\n        if (!nameRef.current.contains(e.target)) {\r\n          setEditableName((prevValue) => !prevValue);\r\n        }\r\n      }\r\n    };\r\n    document.addEventListener(\"click\", updateEditableName);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"click\", updateEditableName);\r\n    };\r\n  }, [editableName]);\r\n\r\n  return (\r\n    <div role=\"button\" className=\"DropBlock\">\r\n      <div\r\n        className={\r\n          isOpen\r\n            ? `icon active ${type} dropDownArrow down`\r\n            : `icon active ${type} dropDownArrow right`\r\n        }\r\n        onClick={() => {\r\n          isExpanded();\r\n        }}\r\n      >\r\n        {type !== \"studySet\" ? <Icons.MdArrowDropDown /> : null}\r\n      </div>\r\n      <div className={`icon ${type}`}>\r\n        {type === \"folder\" ? (\r\n          <FolderIcon fill={iconColour} />\r\n        ) : type === \"binder\" ? (\r\n          <BinderIcon stroke={iconColour} />\r\n        ) : (\r\n          <StudySetIcon stroke={iconColour} />\r\n        )}\r\n      </div>\r\n      <p\r\n        ref={nameRef}\r\n        id={id}\r\n        spellCheck=\"false\"\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") {\r\n            setEditableName((prevValue) => !prevValue);\r\n          }\r\n          setTimeout(function () {\r\n            handleNameChange(\r\n              type,\r\n              folderIndex,\r\n              binderIndex,\r\n              studySetIndex,\r\n              nameRef.current.innerText\r\n            );\r\n          }, 100);\r\n        }}\r\n        contentEditable={editableName}\r\n        className=\"p2\"\r\n      ></p>\r\n      <Icons.MdMoreHoriz\r\n        className=\"icon active dots\"\r\n        onClick={(e) => {\r\n          handleDropdownMenu(e);\r\n        }}\r\n      ></Icons.MdMoreHoriz>\r\n      {dropdownMenu ? (\r\n        <Portal\r\n          state={dropdownMenu}\r\n          handleState={() => setDropdownMenu((prevState) => !prevState)}\r\n        >\r\n          <div\r\n            onClick={() => setDropdownMenu((prevState) => !prevState)}\r\n            className=\"dropdownMenu\"\r\n            style={{ ...styles.popover, ...coords }}\r\n          >\r\n            {dropBlockMenuData.map((item, index) => {\r\n              return item.action === \"Delete\" ? (\r\n                <NavLink\r\n                  to={{\r\n                    pathname: `/${folderBlocks[0].type}/${folderBlocks[0].id}`,\r\n                    state: {\r\n                      type: \"folder\",\r\n                      folderIndex: \"0\",\r\n                    },\r\n                  }}\r\n                >\r\n                  <Block\r\n                    handleDelete={handleDelete}\r\n                    handleRename={handleRename}\r\n                    handleColourPicker={handleColourPicker}\r\n                    handleAddItem={handleAddItem}\r\n                    showDropBlocks={isExpanded}\r\n                    item={item}\r\n                    id={`${item} Block ${index}`}\r\n                    key={`${item} Block ${index}`}\r\n                  />\r\n                </NavLink>\r\n              ) : (\r\n                <Block\r\n                  handleDelete={handleDelete}\r\n                  handleRename={handleRename}\r\n                  handleColourPicker={handleColourPicker}\r\n                  handleAddItem={handleAddItem}\r\n                  showDropBlocks={isExpanded}\r\n                  item={item}\r\n                  id={`${item} Block ${index}`}\r\n                  key={`${item} Block ${index}`}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </Portal>\r\n      ) : null}\r\n      {colourPicker ? (\r\n        <Portal state={colourPicker} handleState={handleColourPicker}>\r\n          <div\r\n            style={{ ...styles.popover, ...coords }}\r\n            className=\"colourPicker\"\r\n          >\r\n            <ColourPicker\r\n              iconColour={iconColour}\r\n              setIconColour={setIconColour}\r\n            ></ColourPicker>\r\n          </div>\r\n        </Portal>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  popover: {\r\n    position: \"absolute\",\r\n    transform: \"translate(0, 15px)\",\r\n  },\r\n};\r\n\r\nexport default withRouter(DropBlock);\r\n",["109","110"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\MainFrame.js",["111","112","113"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport StudyQueue from \"../General/StudyQueue\";\r\nimport TopBar from \"./TopBar\";\r\nimport { useLocation, withRouter } from \"react-router\";\r\nimport \"./MainFrame.css\";\r\nimport FolderBinder from \"./FolderBinder/FolderBinder\";\r\nimport Toolbar from \"./StudySet/Toolbar\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport StudySet from \"./StudySet/StudySet\";\r\n\r\nfunction MainFrame({\r\n  sidebar,\r\n  handleSidebar,\r\n  folderBlocks,\r\n  handleFolderBlocks,\r\n  handleNameChange,\r\n}) {\r\n  const expandedSidebarWidth = 220;\r\n  const [frameWidth, setFrameWidth] = useState(\r\n    window.innerWidth - (sidebar ? expandedSidebarWidth : 0)\r\n  );\r\n\r\n  let location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (sidebar) setFrameWidth(window.innerWidth - expandedSidebarWidth);\r\n    else setFrameWidth(window.innerWidth);\r\n  }, [sidebar]);\r\n\r\n  //Update frame width on each rerender\r\n  useEffect(() => {\r\n    const updateWindowDimensions = () => {\r\n      const newFrameWidth = window.innerWidth - sidebarWidth;\r\n      setFrameWidth(newFrameWidth);\r\n    };\r\n    const sidebarWidth = sidebar ? expandedSidebarWidth : 0;\r\n    window.addEventListener(\"resize\", updateWindowDimensions);\r\n    return () => {\r\n      return window.removeEventListener(\"resize\", updateWindowDimensions);\r\n    };\r\n  });\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"dekked-frame\"\r\n        style={{\r\n          flexGrow: \"1\",\r\n          flexShrink: \"1\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          background: \"white\",\r\n          zIndex: \"1\",\r\n          height: \"100vh\",\r\n          maxHeight: \"100%\",\r\n          width: `${frameWidth}px`,\r\n        }}\r\n      >\r\n        <div style={{ width: \"100%\", maxWidth: \"100vw\", zIndex: \"9\" }}>\r\n          <TopBar\r\n            folderBlocks={folderBlocks}\r\n            sidebar={sidebar}\r\n            handleSidebar={handleSidebar}\r\n          />\r\n        </div>\r\n        <div className=\"dekked-main-page\">\r\n          {location.state ? (\r\n            location.state.type === \"folder\" ||\r\n            location.state.type === \"binder\" ? (\r\n              <FolderBinder\r\n                folderBlocks={folderBlocks}\r\n                handleFolderBlocks={handleFolderBlocks}\r\n                handleNameChange={handleNameChange}\r\n              />\r\n            ) : (\r\n              <StudySet\r\n                folderBlocks={folderBlocks}\r\n                handleNameChange={handleNameChange}\r\n                handleFolderBlocks={handleFolderBlocks}\r\n              />\r\n            )\r\n          ) : null}\r\n        </div>\r\n        <StudyQueue />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(MainFrame);\r\n","C:\\Users\\jonat\\dekked-nav-bar\\src\\index.js",[],["114","115"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlockMenuData.js",[],["116","117"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\ProfileData.js",["118"],"import React from \"react\";\r\nimport {MdSettings} from \"react-icons/md\";\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport logoutIcon from '@iconify/icons-mdi/logout';\r\n\r\n\r\n// declare global variables\r\nconst SETTINGS = \"Settings\"\r\nconst LOGOUT = \"Log out\"\r\n\r\nexport const ProfileData = [\r\n  {\r\n    action: SETTINGS,\r\n    icon: (\r\n      <div className=\"icon settings\">\r\n        <MdSettings/>\r\n      </div>\r\n    ),\r\n  },\r\n\r\n  {\r\n    action: LOGOUT,\r\n    icon: (\r\n      <div className=\"icon logout\">\r\n        <Icon icon={logoutIcon} />\r\n      </div>\r\n    ),\r\n  },\r\n\r\n];\r\n\r\n","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Buttons\\Button.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Block.js",[],["119","120"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Portal.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Settings.js",[],["121","122"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\StudyQueue.js",["123","124"],"import React, { useState } from \"react\";\r\nimport \"./StudyQueue.css\";\r\nimport { Icon } from '@iconify/react';\r\nimport bookshelfIcon from '@iconify/icons-mdi/bookshelf';\r\nimport Portal from \"./Portal\";\r\nimport Button from \"../Buttons/Button\";\r\n\r\nfunction StudyQueue() {\r\n  const [studyQueue, setStudyQueue] = useState(false);\r\n  const [buttonState, setButtonState] = useState(\"inactive\");\r\n  const [notifications, setNotifications] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"studyQueue-container\">\r\n        <div className=\"studyQueueBubble-container\">\r\n          {notifications ? (\r\n            <div className=\"notificationBubble\">\r\n              <b>\r\n                <p className=\"p2\"></p>\r\n              </b>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"studyQueueBubble\">\r\n            <div\r\n              className=\"icon StudyQueue\"\r\n              onClick={() => setStudyQueue((prevState) => !prevState)}\r\n            >\r\n              <Icon icon={bookshelfIcon} style={{color: 'white', fontSize: '24px'}} />\r\n            </div>\r\n          </div>\r\n          {studyQueue ? (\r\n            <Portal\r\n              state={studyQueue}\r\n              handleState={() => setStudyQueue((prevState) => !prevState)}\r\n            >\r\n              <div className=\"studyQueue\">\r\n                <div className=\"header\">\r\n                  <b>\r\n                    <p className=\"p1\">Study Queue</p>\r\n                  </b>\r\n                  <Button type={buttonState} action=\"Study\" />\r\n                </div>\r\n                <div className=\"items\"></div>\r\n              </div>\r\n            </Portal>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default StudyQueue;\r\n","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\Card.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\AddCard.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\FolderBinder.js",["125"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetNotes.js",["126","127","128"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\ChangePassword.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\SettingsData.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Account.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Toolbar.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\ColourPicker.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetFlashcards.js",["129","130"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySet.js",["131"],{"ruleId":"132","severity":1,"message":"133","line":96,"column":6,"nodeType":"134","endLine":96,"endColumn":20,"suggestions":"135"},{"ruleId":"132","severity":1,"message":"136","line":129,"column":6,"nodeType":"134","endLine":129,"endColumn":20,"suggestions":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":1,"column":38,"nodeType":"144","messageId":"145","endLine":1,"endColumn":44},{"ruleId":"142","severity":1,"message":"146","line":7,"column":8,"nodeType":"144","messageId":"145","endLine":7,"endColumn":15},{"ruleId":"142","severity":1,"message":"147","line":8,"column":10,"nodeType":"144","messageId":"145","endLine":8,"endColumn":17},{"ruleId":"138","replacedBy":"148"},{"ruleId":"140","replacedBy":"149"},{"ruleId":"138","replacedBy":"150"},{"ruleId":"140","replacedBy":"151"},{"ruleId":"142","severity":1,"message":"152","line":3,"column":16,"nodeType":"144","messageId":"145","endLine":3,"endColumn":26},{"ruleId":"138","replacedBy":"153"},{"ruleId":"140","replacedBy":"154"},{"ruleId":"138","replacedBy":"155"},{"ruleId":"140","replacedBy":"156"},{"ruleId":"142","severity":1,"message":"157","line":10,"column":23,"nodeType":"144","messageId":"145","endLine":10,"endColumn":37},{"ruleId":"142","severity":1,"message":"158","line":11,"column":25,"nodeType":"144","messageId":"145","endLine":11,"endColumn":41},{"ruleId":"159","severity":1,"message":"160","line":71,"column":17,"nodeType":"161","endLine":91,"endColumn":18},{"ruleId":"142","severity":1,"message":"162","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":13},{"ruleId":"142","severity":1,"message":"143","line":1,"column":28,"nodeType":"144","messageId":"145","endLine":1,"endColumn":34},{"ruleId":"132","severity":1,"message":"163","line":18,"column":6,"nodeType":"134","endLine":18,"endColumn":22,"suggestions":"164"},{"ruleId":"142","severity":1,"message":"162","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":13},{"ruleId":"132","severity":1,"message":"163","line":17,"column":6,"nodeType":"134","endLine":17,"endColumn":22,"suggestions":"165"},{"ruleId":"159","severity":1,"message":"160","line":110,"column":19,"nodeType":"161","endLine":130,"endColumn":20},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'binderIndex', 'editableName', 'folderIndex', 'studySetIndex', and 'type'. Either include them or remove the dependency array.","ArrayExpression",["166"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["167"],"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'Toolbar' is defined but never used.","'NavLink' is defined but never used.",["168"],["169"],["168"],["169"],"'InlineIcon' is defined but never used.",["168"],["169"],["168"],["169"],"'setButtonState' is assigned a value but never used.","'setNotifications' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'React' is defined but never used.","React Hook useEffect has a missing dependency: 'handleTab'. Either include it or remove the dependency array.",["170"],["171"],{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},"no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"176","fix":"178"},"Update the dependencies array to be: [binderIndex, editableName, folderBlocks, folderIndex, studySetIndex, type]",{"range":"179","text":"180"},"Update the dependencies array to be: [editableName, id]",{"range":"181","text":"182"},"Update the dependencies array to be: [handleTab, location.state]",{"range":"183","text":"184"},{"range":"185","text":"184"},[3701,3715],"[binderIndex, editableName, folderBlocks, folderIndex, studySetIndex, type]",[4692,4706],"[editableName, id]",[670,686],"[handleTab, location.state]",[683,699]]