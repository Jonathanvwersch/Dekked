[{"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Block.js":"1","C:\\Users\\jonat\\dekked-nav-bar\\src\\index.js":"2","C:\\Users\\jonat\\dekked-nav-bar\\src\\App.js":"3","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Portal.js":"4","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\SideBar\\SideBar.js":"5","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\SideBar\\ColourPicker.js":"6","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\SideBar\\DropBlock.js":"7","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\MainFrame.js":"8","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\TopBar.js":"9","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\SideBar\\DropdownMenuData.js":"10","C:\\Users\\jonat\\dekked-nav-bar\\src\\reducers\\index.js":"11","C:\\Users\\jonat\\dekked-nav-bar\\src\\reducers\\sidebarReducer.js":"12","C:\\Users\\jonat\\dekked-nav-bar\\src\\actions\\index.js":"13","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\StudyQueueBubble.js":"14"},{"size":887,"mtime":1607455427304,"results":"15","hashOfConfig":"16"},{"size":597,"mtime":1607528185438,"results":"17","hashOfConfig":"16"},{"size":424,"mtime":1607526232463,"results":"18","hashOfConfig":"16"},{"size":757,"mtime":1607455771446,"results":"19","hashOfConfig":"16"},{"size":11432,"mtime":1607538961376,"results":"20","hashOfConfig":"16"},{"size":824,"mtime":1607430635092,"results":"21","hashOfConfig":"16"},{"size":7345,"mtime":1607534268935,"results":"22","hashOfConfig":"16"},{"size":682,"mtime":1607540459900,"results":"23","hashOfConfig":"16"},{"size":1161,"mtime":1607530096531,"results":"24","hashOfConfig":"16"},{"size":2097,"mtime":1607455336174,"results":"25","hashOfConfig":"16"},{"size":202,"mtime":1607529081591,"results":"26","hashOfConfig":"16"},{"size":277,"mtime":1607525740707,"results":"27","hashOfConfig":"16"},{"size":84,"mtime":1607526001725,"results":"28","hashOfConfig":"16"},{"size":388,"mtime":1607540921970,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1mc2jll",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Block.js",[],["60","61"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\index.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\App.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Portal.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\SideBar\\SideBar.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\SideBar\\ColourPicker.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\SideBar\\DropBlock.js",["62"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport * as Icons from \"react-icons/md\";\r\nimport \"./DropBlock.css\";\r\nimport ColourPicker from \"./ColourPicker\";\r\nimport Block from \"../General/Block\";\r\nimport Portal from \"../General/Portal\";\r\nimport { ReactComponent as FolderIcon } from \"../../custom-icons/folder.svg\";\r\nimport { ReactComponent as BinderIcon } from \"../../custom-icons/binder.svg\";\r\nimport { ReactComponent as StudySetIcon } from \"../../custom-icons/studyset.svg\";\r\n\r\nfunction DropBlock({\r\n  type,\r\n  handleDelete,\r\n  handleAddItem,\r\n  id,\r\n  isExpanded,\r\n  dropdownMenudata,\r\n}) {\r\n  const [coords, setCoords] = useState({}); // Set mouse coordinates\r\n  const [dropdownMenu, setDropdownMenu] = useState(false); // Set dropdown menu visibility\r\n  const [height, setHeight] = useState(window.innerHeight); // Get height of window at all times for positioning portal components\r\n  const [editableName, setEditableName] = useState(false); // Set name of dropblock to be editable so that you can rename block\r\n  const [colourPicker, setColourPicker] = useState(false); // Set visibility of colour picker component\r\n  const [yPositionOfDropdownMenu, setYPositionofDropdownMenu] = useState(); // Set y position of dropdown menu\r\n  const [iconColour, setIconColour] = useState(\"#2C2C31\"); // Set colour of icons (necessary to change colours using colour picker)\r\n  const [isOpen, setIsOpen] = useState(false); // Set dropdown arrows (open is a down arrow, closed is a right arrow)\r\n\r\n  const ref = useRef(null); // Reference name of block to deactivate focus after renaming block\r\n\r\n  const heightOfDropdownMenu = 30 * dropdownMenudata.length; // Value is necessary to position dropdown menu based on mouse coordinates\r\n  const heightOfColourPicker = 220; // Value is necessary to position colour picker based on mouse coordinates\r\n\r\n  // Position portal components based on mouse coordinates\r\n  const positionComponents = (e, itemHeight) => {\r\n    const rect = e.target.getBoundingClientRect();\r\n    let bottomValue = height - rect.y; // distance from mouse click to bottom of window\r\n    let topValue = rect.y + window.scrollY; // distance from mouse click to top of window\r\n    setYPositionofDropdownMenu(topValue);\r\n\r\n    if (\r\n      bottomValue < 1.1 * heightOfColourPicker &&\r\n      topValue > heightOfColourPicker\r\n    )\r\n      setYPositionofDropdownMenu(topValue - heightOfColourPicker - 10);\r\n    else if (bottomValue < 1.4 * itemHeight && topValue > itemHeight) {\r\n      topValue = rect.y - itemHeight - 10;\r\n    }\r\n\r\n    setCoords({\r\n      left: rect.x + rect.width / 2,\r\n      top: topValue,\r\n    });\r\n  };\r\n\r\n  // Set orientation of dropdown arrow\r\n  const handleIsOpen = () => {\r\n    setIsOpen((prevState) => !prevState);\r\n  };\r\n\r\n  const handleColourPicker = () => {\r\n    const newCoords = {\r\n      left: coords.left,\r\n      top: yPositionOfDropdownMenu,\r\n    };\r\n    setCoords(newCoords);\r\n    setColourPicker((prevState) => !prevState);\r\n  };\r\n\r\n  const handleRename = () => {\r\n    setEditableName((prevValue) => !prevValue);\r\n    // Focus in on name of dropblock when being renamed (i.e. show text cursor)\r\n    var div = document.querySelector(`p[id=\"${id}\"]`);\r\n    setTimeout(function () {\r\n      div.focus();\r\n    }, 0);\r\n  };\r\n\r\n  const handleDropdownMenu = (e) => {\r\n    positionComponents(e, heightOfDropdownMenu);\r\n    setDropdownMenu((prevState) => !prevState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const updateEditableName = (e) => {\r\n      // When user clicks away from name, make sure the beginning of the name is shown\r\n      let fileName = document.querySelector(`p[id=\"${id}\"]`);\r\n      if (fileName) {\r\n        fileName.addEventListener(\r\n          \"blur\",\r\n          function (e) {\r\n            this.scrollLeft = \"0px\";\r\n          },\r\n          true\r\n        );\r\n      }\r\n      // If user clicks outside of name of dropblock, turn off editability of name\r\n      if (editableName === true) {\r\n        if (!ref.current.contains(e.target)) {\r\n          setEditableName((prevValue) => !prevValue);\r\n        }\r\n      }\r\n    };\r\n    document.addEventListener(\"click\", updateEditableName);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"click\", updateEditableName);\r\n    };\r\n  }, [editableName]);\r\n\r\n  // Get window dimensions on each rerender to calculate position of portal components\r\n  useEffect(() => {\r\n    const updateWindowDimensions = () => {\r\n      const newHeight = window.innerHeight;\r\n      setHeight(newHeight);\r\n    };\r\n\r\n    window.addEventListener(\"resize\", updateWindowDimensions);\r\n\r\n    return () => window.removeEventListener(\"resize\", updateWindowDimensions);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"DropBlock\">\r\n      <div\r\n        className={\r\n          isOpen\r\n            ? `icon ${type} dropDownArrow down`\r\n            : `icon ${type} dropDownArrow right`\r\n        }\r\n        onClick={() => {\r\n          handleIsOpen();\r\n          isExpanded();\r\n        }}\r\n      >\r\n        {type !== \"studySet\" ? <Icons.MdArrowDropDown /> : null}\r\n      </div>\r\n      <div className={`icon ${type}`}>\r\n        {type === \"folder\" ? (\r\n          <FolderIcon fill={iconColour} />\r\n        ) : type === \"binder\" ? (\r\n          <BinderIcon stroke={iconColour} />\r\n        ) : (\r\n          <StudySetIcon stroke={iconColour} />\r\n        )}\r\n      </div>\r\n      <p\r\n        ref={ref}\r\n        id={id}\r\n        spellCheck=\"false\"\r\n        onKeyPress={(e) => {\r\n          if (e.key === \"Enter\") {\r\n            setEditableName((prevValue) => !prevValue);\r\n          }\r\n        }}\r\n        contentEditable={editableName}\r\n        className=\"p2\"\r\n      ></p>\r\n      <Icons.MdMoreHoriz\r\n        className=\"icon dots\"\r\n        onClick={(e) => {\r\n          handleDropdownMenu(e);\r\n        }}\r\n      ></Icons.MdMoreHoriz>\r\n      {dropdownMenu ? (\r\n        <Portal\r\n          state={dropdownMenu}\r\n          handleState={() => setDropdownMenu((prevState) => !prevState)}\r\n        >\r\n          <div\r\n            onClick={() => setDropdownMenu((prevState) => !prevState)}\r\n            className=\"DropdownMenu\"\r\n            style={{ ...styles.popover, ...coords }}\r\n          >\r\n            {dropdownMenudata.map((item, index) => {\r\n              return (\r\n                <Block\r\n                  handleDelete={handleDelete}\r\n                  handleRename={handleRename}\r\n                  handleColourPicker={handleColourPicker}\r\n                  handleAddItem={handleAddItem}\r\n                  showDropBlocks={isExpanded}\r\n                  setDropdownArrow={setIsOpen}\r\n                  item={item}\r\n                  id={`${item} Block ${index}`}\r\n                  key={`${item} Block ${index}`}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </Portal>\r\n      ) : null}\r\n      {colourPicker ? (\r\n        <Portal state={colourPicker} handleState={handleColourPicker}>\r\n          <div\r\n            style={{ ...styles.popover, ...coords }}\r\n            className=\"colourPicker\"\r\n          >\r\n            <ColourPicker\r\n              iconColour={iconColour}\r\n              setIconColour={setIconColour}\r\n            ></ColourPicker>\r\n          </div>\r\n        </Portal>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  popover: {\r\n    position: \"absolute\",\r\n    transform: \"translate(0, 15px)\",\r\n  },\r\n};\r\n\r\nexport default DropBlock;\r\n","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\MainFrame.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\TopBar.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\SideBar\\DropdownMenuData.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\reducers\\index.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\reducers\\sidebarReducer.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\actions\\index.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\StudyQueueBubble.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":108,"column":6,"nodeType":"69","endLine":108,"endColumn":20,"suggestions":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["73"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [editableName, id]",{"range":"76","text":"77"},[4238,4252],"[editableName, id]"]