[{"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\Card.tsx":"1","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\FolderBinder.tsx":"2","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\AddCard.tsx":"3","C:\\Users\\jonat\\dekked-nav-bar\\src\\index.tsx":"4","C:\\Users\\jonat\\dekked-nav-bar\\src\\App.tsx":"5","C:\\Users\\jonat\\dekked-nav-bar\\src\\custom-hooks\\useMousePosition.tsx":"6","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Block\\Block.tsx":"7","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\DeleteModal\\DeleteModal.tsx":"8","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\StudyQueue\\StudyQueue.tsx":"9","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\LoadingSpinner\\LoadingSpinner.tsx":"10","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Settings\\Settings.tsx":"11","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Settings\\SettingsData.tsx":"12","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\ColourPicker\\ColourPicker.tsx":"13","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DeletedBlock\\DeletedBlock.tsx":"14","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarBottom\\SidebarBottom.tsx":"15","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlock\\DropBlockDots\\DropBlockDots.tsx":"16","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlock\\DropBlock\\DropBlock.tsx":"17","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarTop\\SidebarTop.tsx":"18","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarWorkspace\\SidebarWorkspace.tsx":"19","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarTop\\ProfileData.tsx":"20","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlock\\DropBlockDots\\DropBlockMenuData.tsx":"21","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Account\\Account\\Account.tsx":"22","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Account\\ChangePassword\\ChangePassword.tsx":"23","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\TopBar\\TopBar.tsx":"24","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Flashcard\\Flashcard.tsx":"25","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Flashcard Tab\\FlashcardTab.tsx":"26","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Toolbar\\TextBlockData.tsx":"27","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\TopBar\\Breadcrumbs\\Breadcrumbs.tsx":"28","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetTabs\\StudySetTabs.tsx":"29","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetFlashcards\\StudySetFlashcards.tsx":"30","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySet.tsx":"31","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\Sidebar.tsx":"32","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Buttons\\Button\\Button.tsx":"33","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Portal\\Portal.tsx":"34","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\PageTitle\\PageTitle.tsx":"35","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Linked Flashcard\\LinkedFlashcard.tsx":"36","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\MainFrame.tsx":"37"},{"size":1646,"mtime":1609758614420,"results":"38","hashOfConfig":"39"},{"size":5419,"mtime":1610035230402,"results":"40","hashOfConfig":"39"},{"size":358,"mtime":1609584505094,"results":"41","hashOfConfig":"39"},{"size":304,"mtime":1609766304006,"results":"42","hashOfConfig":"39"},{"size":9702,"mtime":1610034439376,"results":"43","hashOfConfig":"39"},{"size":461,"mtime":1609773033505,"results":"44","hashOfConfig":"39"},{"size":1469,"mtime":1609950783443,"results":"45","hashOfConfig":"39"},{"size":758,"mtime":1609950902752,"results":"46","hashOfConfig":"39"},{"size":1455,"mtime":1609952192640,"results":"47","hashOfConfig":"39"},{"size":507,"mtime":1610029903608,"results":"48","hashOfConfig":"39"},{"size":1009,"mtime":1609954664107,"results":"49","hashOfConfig":"39"},{"size":348,"mtime":1609952295654,"results":"50","hashOfConfig":"39"},{"size":958,"mtime":1609955439926,"results":"51","hashOfConfig":"39"},{"size":2350,"mtime":1609959159447,"results":"52","hashOfConfig":"39"},{"size":2341,"mtime":1609962320391,"results":"53","hashOfConfig":"39"},{"size":6559,"mtime":1610034874211,"results":"54","hashOfConfig":"39"},{"size":6389,"mtime":1610034819311,"results":"55","hashOfConfig":"39"},{"size":2508,"mtime":1609958409238,"results":"56","hashOfConfig":"39"},{"size":4994,"mtime":1610024561690,"results":"57","hashOfConfig":"39"},{"size":597,"mtime":1609958406441,"results":"58","hashOfConfig":"39"},{"size":1633,"mtime":1609959115102,"results":"59","hashOfConfig":"39"},{"size":1913,"mtime":1609962113659,"results":"60","hashOfConfig":"39"},{"size":1271,"mtime":1610032276830,"results":"61","hashOfConfig":"39"},{"size":1656,"mtime":1610015300973,"results":"62","hashOfConfig":"39"},{"size":1346,"mtime":1610011439993,"results":"63","hashOfConfig":"39"},{"size":709,"mtime":1610011465465,"results":"64","hashOfConfig":"39"},{"size":1771,"mtime":1610011437686,"results":"65","hashOfConfig":"39"},{"size":6847,"mtime":1610035177350,"results":"66","hashOfConfig":"39"},{"size":3136,"mtime":1610035145497,"results":"67","hashOfConfig":"39"},{"size":2193,"mtime":1610015327532,"results":"68","hashOfConfig":"39"},{"size":5617,"mtime":1610035066109,"results":"69","hashOfConfig":"39"},{"size":3961,"mtime":1610015421006,"results":"70","hashOfConfig":"39"},{"size":428,"mtime":1610030543340,"results":"71","hashOfConfig":"39"},{"size":1709,"mtime":1610031798047,"results":"72","hashOfConfig":"39"},{"size":1435,"mtime":1610035018834,"results":"73","hashOfConfig":"39"},{"size":815,"mtime":1610011300678,"results":"74","hashOfConfig":"39"},{"size":2805,"mtime":1610034972864,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"kqqhs6",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\Card.tsx",[],["158","159"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\FolderBinder.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\AddCard.tsx",[],["160","161"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\index.tsx",[],["162","163"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\App.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\custom-hooks\\useMousePosition.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Block\\Block.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\DeleteModal\\DeleteModal.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\StudyQueue\\StudyQueue.tsx",["164"],"import React, { useState } from \"react\";\r\nimport \"./StudyQueue.css\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport bookshelfIcon from \"@iconify/icons-mdi/bookshelf\";\r\nimport Portal from \"../Portal/Portal\";\r\nimport Button from \"../../Buttons/Button/Button\";\r\n\r\nconst StudyQueue: React.FC = () => {\r\n  const [studyQueue, setStudyQueue] = useState<boolean>(false);\r\n  const [notifications, setNotifications] = useState<number>(0);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"studyQueueBubbleContainer\">\r\n        {notifications > 0 ? (\r\n          <div className=\"notificationBubble p2 bold\">{notifications}</div>\r\n        ) : null}\r\n        <div\r\n          className=\"studyQueueBubble primary\"\r\n          onClick={() => setStudyQueue((prevState) => !prevState)}\r\n        >\r\n          <Icon\r\n            className=\"icon StudyQueue\"\r\n            icon={bookshelfIcon}\r\n            style={{ color: \"white\", fontSize: \"24px\" }}\r\n          />\r\n        </div>\r\n      </div>\r\n      {studyQueue ? (\r\n        <Portal\r\n          state={studyQueue}\r\n          handleState={() => setStudyQueue((prevState) => !prevState)}\r\n        >\r\n          <div className=\"studyQueue dropdownMenu\">\r\n            <div className=\"srBlocks\"></div>\r\n            <div id=\"studyQueueButton\">\r\n              <Button type=\"primary\" action=\"Study\" disabled={true} />\r\n            </div>\r\n          </div>\r\n        </Portal>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StudyQueue;\r\n",["165","166"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\LoadingSpinner\\LoadingSpinner.tsx",["167","168"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Settings\\Settings.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Settings\\SettingsData.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\ColourPicker\\ColourPicker.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DeletedBlock\\DeletedBlock.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarBottom\\SidebarBottom.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlock\\DropBlockDots\\DropBlockDots.tsx",["169"],"import React, { useState, useEffect } from \"react\";\r\nimport ColourPicker from \"../../ColourPicker/ColourPicker\";\r\nimport Block from \"../../../General/Block/Block\";\r\nimport Portal from \"../../../General/Portal/Portal\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {MdMoreHoriz} from \"react-icons/md\";\r\nimport { FolderData, BinderData, StudySetData } from \"./DropBlockMenuData\";\r\n\r\ninterface Props {\r\n  item:any;\r\n  handleFolderBlocks: (newFolderBlocksArray:any) => void;\r\n  studySetIndex?:number;\r\n  binderIndex?:number;\r\n  folderIndex:number;\r\n  iconColour:string;\r\n  setIconColour: React.Dispatch<any>;\r\n  handleAddItem?: () => void;\r\n  handleDelete: () => void;\r\n  handleRename: () => void;\r\n  folderBlocks:{\r\n    name: string;\r\n    type: string;\r\n    id: string;\r\n    iconColour: string;\r\n    isOpen: boolean;\r\n    binders: {\r\n        name: string;\r\n        type: string;\r\n        id: string;\r\n        folderId: string;\r\n        iconColour: string;\r\n        isOpen: boolean;\r\n        studySets: {\r\n            name: string;\r\n            type: string;\r\n            id: string;\r\n            binderId:string;\r\n            folderId:string;\r\n            iconColour:string;\r\n            tab:string;\r\n            flashcards:{\r\n              type: string;\r\n              id: string;\r\n              front:string;\r\n              back:string;\r\n              studySetId:string\r\n              binderId:string;\r\n              folderId:string;\r\n            }[];\r\n        }[];\r\n    }[];\r\n  }[];\r\n\r\n}\r\n\r\nconst DropBlockDots:React.FC<Props> = ({\r\n  item,\r\n  handleFolderBlocks,\r\n  folderBlocks,\r\n  handleRename,\r\n  handleDelete,\r\n  handleAddItem,\r\n  setIconColour,\r\n  iconColour,\r\n  studySetIndex,\r\n  folderIndex,\r\n  binderIndex,\r\n}) => {\r\n  const dropBlockMenuData = item.type===\"folder\" ? FolderData : item.type===\"binder\" ? BinderData : StudySetData\r\n  const [coords, setCoords] = useState({left:0, top:0}); // Set mouse coordinates\r\n  const [dropdownMenu, setDropdownMenu] = useState(false); // Set dropdown menu visibility\r\n  const [colourPicker, setColourPicker] = useState(false); // Set visibility of colour picker component\r\n  const [yPositionOfDropdownMenu, setYPositionofDropdownMenu] = useState<number>(0); // Set y position of dropdown menu\r\n  const heightOfDropdownMenu = 30 * dropBlockMenuData.length; // Value is necessary to position dropdown menu based on mouse coordinates\r\n  const heightOfColourPicker = 220; // Value is necessary to position colour picker based on mouse coordinates\r\n \r\n  const positionComponents = (e:any, itemHeight:number) => {\r\n    const rect = e.target.getBoundingClientRect();\r\n    let bottomValue = window.innerHeight - rect.y; // distance from mouse click to bottom of window\r\n    let topValue = rect.y; // distance from mouse click to top of window\r\n    setYPositionofDropdownMenu(topValue);\r\n\r\n    if (\r\n      bottomValue < 1.5 * heightOfColourPicker &&\r\n      topValue > heightOfColourPicker\r\n    )\r\n      setYPositionofDropdownMenu(topValue - heightOfColourPicker - 10);\r\n\r\n    if (bottomValue < 1.4 * itemHeight && topValue > itemHeight) {\r\n      topValue = rect.y - itemHeight - 10;\r\n    }\r\n\r\n    setCoords({\r\n      left: rect.x + rect.width / 2,\r\n      top: topValue,\r\n    });\r\n  };\r\n\r\n  const handleIconColour = (\r\n    type:string,\r\n    folderIndex:number,\r\n    iconColour:string,\r\n    binderIndex:any,\r\n    studySetIndex:any,\r\n  ) => {\r\n    const newFolderBlocksArray = folderBlocks.slice();\r\n    if (type === \"folder\" ) {\r\n      newFolderBlocksArray[folderIndex].iconColour = iconColour;\r\n    } else if (type === \"binder\") {\r\n      newFolderBlocksArray[folderIndex].binders[\r\n        binderIndex\r\n      ].iconColour = iconColour;\r\n    } else if (type === \"studySet\") {\r\n      newFolderBlocksArray[folderIndex].binders[binderIndex].studySets[\r\n        studySetIndex\r\n      ].iconColour = iconColour;\r\n    }\r\n    handleFolderBlocks(newFolderBlocksArray);\r\n  };\r\n\r\n  const handleColourPicker = () => {\r\n    const newCoords = {\r\n      left: coords.left,\r\n      top: yPositionOfDropdownMenu,\r\n    };\r\n    setCoords(newCoords);\r\n    setColourPicker((prevState) => !prevState);\r\n  };\r\n  \r\n  const handleDropdownMenu = (e:any) => {\r\n    positionComponents(e, heightOfDropdownMenu);\r\n    setDropdownMenu((prevState) => !prevState);\r\n  };\r\n  \r\n  useEffect (() => {\r\n    handleIconColour(item.type, folderIndex, iconColour, binderIndex, studySetIndex)\r\n  }, [iconColour])\r\n  \r\n  return (\r\n    <div id=\"dropBlockDots\">\r\n      <MdMoreHoriz\r\n        className=\"icon active dots\"\r\n        onClick={(e) => {\r\n          handleDropdownMenu(e);\r\n        }}\r\n      ></MdMoreHoriz>\r\n      {dropdownMenu ? (\r\n        <Portal state={dropdownMenu} handleState={() => setDropdownMenu(false)}>\r\n          <div\r\n            onClick={() => setDropdownMenu(false)}\r\n            className=\"dropdownMenu dropBlocks\"\r\n            style={{ ...coords }}\r\n          >\r\n            {dropBlockMenuData.map((item) => {\r\n              return item.action === \"Delete\" ? (\r\n                <NavLink\r\n                  to={{\r\n                    pathname: `/${folderBlocks[0].type}/${folderBlocks[0].id}`,\r\n                    state: {\r\n                      item: {name:folderBlocks[0].name, type:folderBlocks[0].type},\r\n                      folderIndex: \"0\",\r\n                    },\r\n                  }}\r\n                >\r\n                  <Block\r\n                    handleDelete={handleDelete}\r\n                    handleRename={handleRename}\r\n                    handleColourPicker={handleColourPicker}\r\n                    handleAddItem={handleAddItem}\r\n                    item={item}\r\n                    key={uuidv4()}\r\n                  />\r\n                </NavLink>\r\n              ) : (\r\n                <Block\r\n                  handleDelete={handleDelete}\r\n                  handleRename={handleRename}\r\n                  handleColourPicker={handleColourPicker}\r\n                  handleAddItem={handleAddItem}\r\n                  item={item}\r\n                  key={uuidv4()}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </Portal>\r\n      ) : null}\r\n      {colourPicker ? (\r\n        <Portal state={colourPicker} handleState={handleColourPicker}>\r\n          <div style={{ ...coords }} className=\"colourPicker\">\r\n            <ColourPicker\r\n              iconColour={iconColour}\r\n              setIconColour={setIconColour}\r\n            ></ColourPicker>\r\n          </div>\r\n        </Portal>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropBlockDots;\r\n","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlock\\DropBlock\\DropBlock.tsx",["170"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport * as Icons from \"react-icons/md\";\r\nimport \"./DropBlock.css\";\r\nimport { ReactComponent as FolderIcon } from \"../../../../custom-icons/folder.svg\";\r\nimport { ReactComponent as BinderIcon } from \"../../../../custom-icons/binder.svg\";\r\nimport { ReactComponent as StudySetIcon } from \"../../../../custom-icons/studyset.svg\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport DropBlockDots from \"../DropBlockDots/DropBlockDots\";\r\n\r\ninterface Props {\r\n  item: any;\r\n  folderIndex: number;\r\n  folderBlocks: {\r\n    name: string;\r\n    type: string;\r\n    id: string;\r\n    iconColour: string;\r\n    isOpen: boolean;\r\n    binders: {\r\n      name: string;\r\n      type: string;\r\n      id: string;\r\n      folderId: string;\r\n      iconColour: string;\r\n      isOpen: boolean;\r\n      studySets: {\r\n        name: string;\r\n        type: string;\r\n        id: string;\r\n        binderId: string;\r\n        folderId: string;\r\n        iconColour: string;\r\n        tab: string;\r\n        flashcards: {\r\n          type: string;\r\n          id: string;\r\n          front: string;\r\n          back: string;\r\n          studySetId: string;\r\n          binderId: string;\r\n          folderId: string;\r\n        }[];\r\n      }[];\r\n    }[];\r\n  }[];\r\n  handleFolderBlocks: (newFolderBlocksArray: any) => void;\r\n  handleNameChange: (\r\n    type: string,\r\n    folderIndex: number,\r\n    blockName: string,\r\n    binderIndex: any,\r\n    studySetIndex: any\r\n  ) => void;\r\n  handleDelete: () => void;\r\n  handleAddItem?: () => void;\r\n  binderIndex?: number;\r\n  studySetIndex?: number;\r\n}\r\n\r\nconst DropBlock: React.FC<Props> = ({\r\n  item,\r\n  folderIndex,\r\n  binderIndex,\r\n  studySetIndex,\r\n  folderBlocks,\r\n  handleFolderBlocks,\r\n  handleDelete,\r\n  handleAddItem,\r\n  handleNameChange,\r\n}) => {\r\n  const [editableName, setEditableName] = useState<boolean>(false);\r\n  const [iconColour, setIconColour] = useState(item.iconColour);\r\n  const nameRef = useRef<any>(null);\r\n\r\n  const handleRename = () => {\r\n    // Focus in on name of dropblock when being renamed (i.e. show text cursor)\r\n    setEditableName((prevValue) => !prevValue);\r\n    setTimeout(function () {\r\n      nameRef.current.focus();\r\n    }, 50);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Set name of dropblock using data from folder block\r\n    if (editableName === false) nameRef.current.innerText = item.name;\r\n  }, [item.name]);\r\n\r\n  useEffect(() => {\r\n    const updateEditableName = (e: any) => {\r\n      // When user clicks away from name, make sure the beginning of the name is shown\r\n      if (nameRef.current) {\r\n        nameRef.current.addEventListener(\"blur\", function () {\r\n          nameRef.current.scrollLeft = \"0px\";\r\n        });\r\n      }\r\n\r\n      // If user clicks outside of name of dropblock, turn off editability of name\r\n      if (editableName === true) {\r\n        if (!nameRef.current.contains(e.target)) {\r\n          setEditableName((prevValue) => !prevValue);\r\n        }\r\n      }\r\n    };\r\n    document.addEventListener(\"click\", updateEditableName);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"click\", updateEditableName);\r\n    };\r\n  }, [editableName]);\r\n\r\n  const openDropBlock = (\r\n    type: string,\r\n    folderIndex: number,\r\n    binderIndex: any\r\n  ) => {\r\n    const newFolderBlocksArray = folderBlocks.slice();\r\n    if (type === \"folder\")\r\n      newFolderBlocksArray[folderIndex].isOpen = !newFolderBlocksArray[\r\n        folderIndex\r\n      ].isOpen;\r\n    else {\r\n      newFolderBlocksArray[folderIndex].binders[\r\n        binderIndex\r\n      ].isOpen = !newFolderBlocksArray[folderIndex].binders[binderIndex].isOpen;\r\n    }\r\n\r\n    handleFolderBlocks(newFolderBlocksArray);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dekked-dropBlockContainer\">\r\n      <NavLink\r\n        activeStyle={{\r\n          background: \"var(--off-beige-clicked)\",\r\n          fontWeight: \"bold\",\r\n        }}\r\n        to={{\r\n          pathname: `${\r\n            item.type === \"studySet\"\r\n              ? `/${item.type}/${item.tab}/${item.id}`\r\n              : `/${item.type}/${item.id}`\r\n          }`,\r\n          state: {\r\n            item: {type: item.type,\r\n            name: item.name, tab: item.tab,}\r\n            \r\n            folderIndex: folderIndex,\r\n            binderIndex: binderIndex,\r\n            studySetIndex: studySetIndex,\r\n            \r\n          },\r\n        }}\r\n      >\r\n        <div role=\"button\" className={`dekked-dropBlock ${item.type}`}>\r\n          {item.type !== \"studySet\" ? (\r\n            <div\r\n              className={\r\n                item.isOpen\r\n                  ? `icon active dropDownArrow down`\r\n                  : `icon active dropDownArrow right`\r\n              }\r\n              onClick={() => {\r\n                openDropBlock(item.type, folderIndex, binderIndex);\r\n              }}\r\n            >\r\n              <Icons.MdArrowDropDown />\r\n            </div>\r\n          ) : null}\r\n          <div className={`icon ${item.type}`}>\r\n            {item.type === \"folder\" ? (\r\n              <FolderIcon fill={iconColour} />\r\n            ) : item.type === \"binder\" ? (\r\n              <BinderIcon stroke={iconColour} />\r\n            ) : (\r\n              <StudySetIcon stroke={iconColour} />\r\n            )}\r\n          </div>\r\n          <span\r\n            ref={nameRef}\r\n            spellCheck=\"false\"\r\n            onKeyDown={(e) => {\r\n              if (e.key === \"Enter\") {\r\n                setEditableName((prevValue) => !prevValue);\r\n              }\r\n              setTimeout(function () {\r\n                handleNameChange(\r\n                  item.type,\r\n                  folderIndex,\r\n                  nameRef.current.innerText,\r\n                  binderIndex,\r\n                  studySetIndex\r\n                );\r\n              }, 100);\r\n            }}\r\n            contentEditable={editableName}\r\n            className=\"p2\"\r\n          ></span>\r\n        </div>\r\n      </NavLink>\r\n      <DropBlockDots\r\n        item={item}\r\n        handleFolderBlocks={handleFolderBlocks}\r\n        handleRename={handleRename}\r\n        handleDelete={handleDelete}\r\n        handleAddItem={handleAddItem}\r\n        setIconColour={setIconColour}\r\n        iconColour={iconColour}\r\n        folderBlocks={folderBlocks}\r\n        studySetIndex={studySetIndex}\r\n        folderIndex={folderIndex}\r\n        binderIndex={binderIndex}\r\n      ></DropBlockDots>\r\n    </div>\r\n  );\r\n};\r\nexport default DropBlock;\r\n","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarTop\\SidebarTop.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarWorkspace\\SidebarWorkspace.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarTop\\ProfileData.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlock\\DropBlockDots\\DropBlockMenuData.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Account\\Account\\Account.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Account\\ChangePassword\\ChangePassword.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\TopBar\\TopBar.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Flashcard\\Flashcard.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Flashcard Tab\\FlashcardTab.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Toolbar\\TextBlockData.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\TopBar\\Breadcrumbs\\Breadcrumbs.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetTabs\\StudySetTabs.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetFlashcards\\StudySetFlashcards.tsx",["171"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySet.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\Sidebar.tsx",[],["172","173"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Buttons\\Button\\Button.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Portal\\Portal.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\PageTitle\\PageTitle.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Linked Flashcard\\LinkedFlashcard.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\MainFrame.tsx",[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"174","replacedBy":"178"},{"ruleId":"176","replacedBy":"179"},{"ruleId":"174","replacedBy":"180"},{"ruleId":"176","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":10,"column":25,"nodeType":"184","messageId":"185","endLine":10,"endColumn":41},{"ruleId":"174","replacedBy":"186"},{"ruleId":"176","replacedBy":"187"},{"ruleId":"182","severity":1,"message":"188","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"189","line":1,"column":27,"nodeType":"184","messageId":"185","endLine":1,"endColumn":36},{"ruleId":"190","severity":1,"message":"191","line":138,"column":6,"nodeType":"192","endLine":138,"endColumn":18,"suggestions":"193"},{"ruleId":null,"fatal":true,"severity":2,"message":"194","line":148,"column":12},{"ruleId":"190","severity":1,"message":"195","line":60,"column":6,"nodeType":"192","endLine":60,"endColumn":22,"suggestions":"196"},{"ruleId":"174","replacedBy":"197"},{"ruleId":"176","replacedBy":"198"},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],["199"],["200"],["199"],["200"],"@typescript-eslint/no-unused-vars","'setNotifications' is assigned a value but never used.","Identifier","unusedVar",["199"],["200"],"'useState' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'binderIndex', 'folderIndex', 'handleIconColour', 'item.type', and 'studySetIndex'. Either include them or remove the dependency array.","ArrayExpression",["201"],"Parsing error: ',' expected.","React Hook useEffect has a missing dependency: 'handleTab'. Either include it or remove the dependency array.",["202"],["199"],["200"],"no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},"Update the dependencies array to be: [binderIndex, folderIndex, handleIconColour, iconColour, item.type, studySetIndex]",{"range":"207","text":"208"},"Update the dependencies array to be: [handleTab, location.state]",{"range":"209","text":"210"},[4434,4446],"[binderIndex, folderIndex, handleIconColour, iconColour, item.type, studySetIndex]",[1634,1650],"[handleTab, location.state]"]