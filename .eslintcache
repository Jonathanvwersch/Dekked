[{"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\MainFrame.js":"1","C:\\Users\\jonat\\dekked-nav-bar\\src\\custom-hooks\\UseMousePosition.js":"2","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Toolbar.js":"3","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\FolderBinder.js":"4","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\Card.js":"5","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\FlashcardTab.js":"6","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetNotes.js":"7","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySet.js":"8","C:\\Users\\jonat\\dekked-nav-bar\\src\\App.js":"9","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\TextBlockData.js":"10","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\AddCard.js":"11","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\Sidebar.js":"12","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Settings.js":"13","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Account.js":"14","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlock.js":"15","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\ChangePassword.js":"16","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\SettingsData.js":"17","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\ProfileData.js":"18","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarBottom.js":"19","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Flashcard.js":"20","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\TopBar.js":"21","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarTop.js":"22","C:\\Users\\jonat\\dekked-nav-bar\\src\\custom-hooks\\useHover.js":"23","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetFlashcards.js":"24","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Portal.js":"25"},{"size":1689,"mtime":1609367817311,"results":"26","hashOfConfig":"27"},{"size":435,"mtime":1609327753179,"results":"28","hashOfConfig":"27"},{"size":2462,"mtime":1609319659816,"results":"29","hashOfConfig":"27"},{"size":5746,"mtime":1609319585068,"results":"30","hashOfConfig":"27"},{"size":1212,"mtime":1609335635442,"results":"31","hashOfConfig":"27"},{"size":628,"mtime":1609251728847,"results":"32","hashOfConfig":"27"},{"size":682,"mtime":1609327168675,"results":"33","hashOfConfig":"27"},{"size":8679,"mtime":1609281326967,"results":"34","hashOfConfig":"27"},{"size":8771,"mtime":1609367801203,"results":"35","hashOfConfig":"27"},{"size":1729,"mtime":1609281196835,"results":"36","hashOfConfig":"27"},{"size":286,"mtime":1609241403435,"results":"37","hashOfConfig":"27"},{"size":6273,"mtime":1609508614626,"results":"38","hashOfConfig":"27"},{"size":1468,"mtime":1609406690651,"results":"39","hashOfConfig":"27"},{"size":1813,"mtime":1609281326930,"results":"40","hashOfConfig":"27"},{"size":5794,"mtime":1609336569976,"results":"41","hashOfConfig":"27"},{"size":902,"mtime":1609281326930,"results":"42","hashOfConfig":"27"},{"size":341,"mtime":1609258260185,"results":"43","hashOfConfig":"27"},{"size":595,"mtime":1609258374279,"results":"44","hashOfConfig":"27"},{"size":2245,"mtime":1609407844134,"results":"45","hashOfConfig":"27"},{"size":1115,"mtime":1609327055009,"results":"46","hashOfConfig":"27"},{"size":7091,"mtime":1609367883979,"results":"47","hashOfConfig":"27"},{"size":2423,"mtime":1609410529435,"results":"48","hashOfConfig":"27"},{"size":744,"mtime":1609347839256,"results":"49","hashOfConfig":"27"},{"size":1231,"mtime":1609250662487,"results":"50","hashOfConfig":"27"},{"size":1742,"mtime":1609503946828,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1mc2jll",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\MainFrame.js",["107","108"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\custom-hooks\\UseMousePosition.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Toolbar.js",[],["109","110"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\FolderBinder.js",["111"],"import React, { useEffect, useRef } from \"react\";\r\nimport AddCard from \"./AddCard\";\r\nimport { useLocation, withRouter } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Card from \"./Card\";\r\nimport Button from \"../../Buttons/Button\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction FolderBinder({ folderBlocks, handleNameChange, addStudySet, addBinder }) {\r\n  let location = useLocation();\r\n  const titleRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (location.state && document.activeElement !== titleRef.current) {\r\n      if (location.state.type === \"folder\") {\r\n        titleRef.current.innerText =\r\n          folderBlocks[location.state.folderIndex].name;\r\n      } else if (location.state.type === \"binder\") {\r\n        titleRef.current.innerText =\r\n          folderBlocks[location.state.folderIndex].binders[\r\n            location.state.binderIndex\r\n          ].name;\r\n      } else if (location.state.type === \"studySet\") {\r\n        titleRef.current.innerText =\r\n          folderBlocks[location.state.folderIndex].binders[\r\n            location.state.binderIndex\r\n          ].studySets[location.state.studySetIndex].name;\r\n      }\r\n    }\r\n  }, [folderBlocks, location.state]);\r\n\r\n  return (\r\n    <>\r\n      {location.state ? (\r\n        <>\r\n          <div className=\"dekked-pageHeaderContainer\">\r\n            <div className=\"dekked-pageHeader\">\r\n              <h2\r\n                onDragOver={(e) => {\r\n                  e.preventDefault();\r\n                }}\r\n                onPaste={(e)=>{e.preventDefault();return false;}}\r\n                contentEditable={true}\r\n                ref={titleRef}\r\n                spellCheck={false}\r\n                onKeyDown={(e) => {\r\n                  if (location.state) {\r\n                    if (e.key === \"Enter\") {\r\n                      e.preventDefault();\r\n                    }\r\n                    setTimeout(function () {\r\n                      handleNameChange(\r\n                        location.state.type,\r\n                        location.state.folderIndex,\r\n                        location.state.binderIndex,\r\n                        location.state.studySetIndex,\r\n                        titleRef.current.innerText\r\n                      );\r\n                    }, 100);\r\n                  }\r\n                }}\r\n              ></h2>\r\n              <div className=\"buttonQuantity\">\r\n                <span className=\"p2\">\r\n                  {location.state\r\n                    ? location.state.type === \"folder\"\r\n                      ? `${\r\n                          folderBlocks[location.state.folderIndex].binders\r\n                            .length\r\n                        } Binder(s)`\r\n                      : `${\r\n                          folderBlocks[location.state.folderIndex].binders[\r\n                            location.state.binderIndex\r\n                          ].studySets.length\r\n                        } Study set(s)`\r\n                    : null}\r\n                </span>\r\n                <Button type=\"primary\" action=\"Study\" disabled={true} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"dekked-pageContentContainer\">\r\n            <div className=\"dekked-pageContent\">\r\n              <AddCard\r\n                handleClick={() => {\r\n                  location.state.type === \"folder\"\r\n                    ? addBinder(location.state.folderIndex)\r\n                    : addStudySet(\r\n                        location.state.folderIndex,\r\n                        location.state.binderIndex\r\n                      );\r\n                }}\r\n              />\r\n              {location.state.type === \"folder\"\r\n                ? folderBlocks[location.state.folderIndex].binders.map(\r\n                    (item, index) => (\r\n                      <NavLink\r\n                        to={{\r\n                          pathname: `/${item.type}/${item.id}`,\r\n                          state: {\r\n                            type: item.type,\r\n                            name: item.name,\r\n                            folderIndex: location.state.folderIndex,\r\n                            binderIndex: index,\r\n                          },\r\n                        }}\r\n                      >\r\n                        <Card\r\n                          key={uuidv4()}\r\n                          name={item.name ? item.name : \"Untitled\"}\r\n                          type={item.type}\r\n                          iconColour={item.iconColour}\r\n                        />\r\n                      </NavLink>\r\n                    )\r\n                  )\r\n                : folderBlocks[location.state.folderIndex].binders[\r\n                    location.state.binderIndex\r\n                  ].studySets.map((item, index) => (\r\n                    <NavLink\r\n                      to={{\r\n                        pathname: `/${item.type}/${item.tab}/${item.id}`,\r\n                        state: {\r\n                          type: item.type,\r\n                          name: item.name,\r\n                          folderIndex: location.state.folderIndex,\r\n                          binderIndex: location.state.binderIndex,\r\n                          studySetIndex: index,\r\n                          tab: item.tab,\r\n                        },\r\n                      }}\r\n                    >\r\n                      <Card\r\n                        key={uuidv4()}\r\n                        name={item.name ? item.name : \"Untitled\"}\r\n                        type={item.type}\r\n                        iconColour={item.iconColour}\r\n                      />\r\n                    </NavLink>\r\n                  ))}\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n      </>\r\n  );\r\n}\r\n\r\nexport default withRouter(FolderBinder);\r\n",["112","113"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\Card.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\FlashcardTab.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetNotes.js",["114"],"import React, { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nfunction StudySetNotes({ folderBlocks, handleFolderBlocks }) {\r\n  let location = useLocation();\r\n\r\n  const handleTab = () => {\r\n    const newFolderBlocksArray = folderBlocks.slice(); //make copy of array of folder blocks\r\n    newFolderBlocksArray[location.state.folderIndex].binders[\r\n      location.state.binderIndex\r\n    ].studySets[location.state.studySetIndex].tab = \"notes\"; // Invert folder block's open status\r\n    handleFolderBlocks(newFolderBlocksArray);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleTab();\r\n  }, [location.state]);\r\n\r\n  return <></>;\r\n}\r\n\r\nexport default StudySetNotes;\r\n","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySet.js",["115"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\App.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\TextBlockData.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\AddCard.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\Sidebar.js",["116","117","118"],"import React, { useEffect, useState } from \"react\";\r\nimport DropBlock from \"./DropBlock\";\r\nimport \"./Sidebar.css\";\r\nimport SidebarTop from \"./SidebarTop\";\r\nimport SidebarBottom from \"./SidebarBottom\";\r\nimport { useMousePosition } from \"../../custom-hooks/UseMousePosition\";\r\nimport { useHover } from \"../../custom-hooks/useHover\";\r\n\r\nfunction Sidebar({\r\n  sidebar,\r\n  hoverbar,\r\n  setHoverbar,\r\n  handleSidebar,\r\n  folderBlocks,\r\n  handleFolderBlocks,\r\n  handleNameChange,\r\n  addFolder,\r\n  addBinder,\r\n  addStudySet,\r\n  deleteBlock,\r\n  deleteForever,\r\n  handleRestore,\r\n  deletedItems,\r\n}) {\r\n  const mousePosition = useMousePosition();\r\n  const [portalHover, setPortalHover] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (document.getElementById(\"portal-overlay\") && hoverbar)\r\n      setHoverbar(true);\r\n    else {\r\n      if (!sidebar && mousePosition.x < 20 && !hoverbar) setHoverbar(true);\r\n      else if (hoverbar && !portalHover && mousePosition.x > 220)\r\n        setHoverbar(false);\r\n    }\r\n  }, [mousePosition]);\r\n\r\n  const hoverStyleContainer = {\r\n    position: \"fixed\",\r\n  };\r\n\r\n  const hoverStyleSidebar = {\r\n    filter: \"var(--drop-shadow)\",\r\n    borderRadius: \"2px 0px 2px\",\r\n    height: \"calc(100vh - 140px)\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {sidebar || hoverbar ? (\r\n        <div\r\n          className=\"dekked-sidebarContainer\"\r\n          style={hoverbar ? hoverStyleContainer : null}\r\n        >\r\n          <div\r\n            className=\"dekked-sidebar\"\r\n            style={hoverbar ? hoverStyleSidebar : null}\r\n          >\r\n            <SidebarTop hoverbar={hoverbar} handleSidebar={handleSidebar} />\r\n            <div className=\"workspace\">\r\n              <span className=\"p2 grey title\">Workspace</span>\r\n              <div className=\"folderBlocks\">\r\n                {folderBlocks.map((folder, folderIndex) => (\r\n                  <div key={folder.id} className=\"folderBlock\">\r\n                    <>\r\n                      <DropBlock\r\n                        item={folder}\r\n                        folderIndex={folderIndex}\r\n                        key={folder.id}\r\n                        handleDelete={() =>\r\n                          deleteBlock(folder.type, folderIndex)\r\n                        }\r\n                        handleAddItem={() => addBinder(folderIndex)}\r\n                        handleNameChange={handleNameChange}\r\n                        folderBlocks={folderBlocks}\r\n                        handleFolderBlocks={handleFolderBlocks}\r\n                      />\r\n                    </>\r\n                    {folder.isOpen ? (\r\n                      folder.binders.length === 0 ? (\r\n                        <span className=\"p2 noBinders\">No binders inside</span>\r\n                      ) : (\r\n                        folder.binders.map((binder, binderIndex) => (\r\n                          <div key={binder.id} className=\"binderBlock\">\r\n                            <DropBlock\r\n                              item={binder}\r\n                              key={binder.id}\r\n                              handleDelete={() =>\r\n                                deleteBlock(\r\n                                  binder.type,\r\n                                  folderIndex,\r\n                                  binderIndex\r\n                                )\r\n                              }\r\n                              folderIndex={folderIndex}\r\n                              binderIndex={binderIndex}\r\n                              handleAddItem={() =>\r\n                                addStudySet(folderIndex, binderIndex)\r\n                              }\r\n                              handleNameChange={handleNameChange}\r\n                              folderBlocks={folderBlocks}\r\n                              handleFolderBlocks={handleFolderBlocks}\r\n                            />\r\n\r\n                            {binder.isOpen ? (\r\n                              binder.studySets.length === 0 ? (\r\n                                <span className=\"p2 noStudySets\">\r\n                                  No study sets inside\r\n                                </span>\r\n                              ) : (\r\n                                binder.studySets.map(\r\n                                  (studySet, studySetIndex) => (\r\n                                    <div\r\n                                      key={studySet.id}\r\n                                      className=\"studySetBlock\"\r\n                                    >\r\n                                      <DropBlock\r\n                                        item={studySet}\r\n                                        key={studySet.id}\r\n                                        folderIndex={folderIndex}\r\n                                        binderIndex={binderIndex}\r\n                                        studySetIndex={studySetIndex}\r\n                                        handleDelete={() =>\r\n                                          deleteBlock(\r\n                                            studySet.type,\r\n                                            folderIndex,\r\n                                            binderIndex,\r\n                                            studySetIndex\r\n                                          )\r\n                                        }\r\n                                        handleNameChange={handleNameChange}\r\n                                        folderBlocks={folderBlocks}\r\n                                        handleFolderBlocks={handleFolderBlocks}\r\n                                      />\r\n                                    </div>\r\n                                  )\r\n                                )\r\n                              )\r\n                            ) : null}\r\n                          </div>\r\n                        ))\r\n                      )\r\n                    ) : null}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <SidebarBottom\r\n              deleteForever={deleteForever}\r\n              handleRestore={handleRestore}\r\n              deletedItems={deletedItems}\r\n              addFolder={addFolder}\r\n              hoverbar={hoverbar}\r\n            />\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Settings.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Account.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlock.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\ChangePassword.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\SettingsData.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\ProfileData.js",["119"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarBottom.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Flashcard.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\TopBar.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarTop.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\custom-hooks\\useHover.js",["120"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetFlashcards.js",["121"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Portal.js",[],{"ruleId":"122","severity":1,"message":"123","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":26},{"ruleId":"122","severity":1,"message":"126","line":8,"column":10,"nodeType":"124","messageId":"125","endLine":8,"endColumn":26},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":38,"column":15,"nodeType":"133","endLine":62,"endColumn":16},{"ruleId":"127","replacedBy":"134"},{"ruleId":"129","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":17,"column":6,"nodeType":"138","endLine":17,"endColumn":22,"suggestions":"139"},{"ruleId":"131","severity":1,"message":"132","line":141,"column":15,"nodeType":"133","endLine":165,"endColumn":16},{"ruleId":"122","severity":1,"message":"140","line":7,"column":10,"nodeType":"124","messageId":"125","endLine":7,"endColumn":18},{"ruleId":"122","severity":1,"message":"141","line":26,"column":23,"nodeType":"124","messageId":"125","endLine":26,"endColumn":37},{"ruleId":"136","severity":1,"message":"142","line":36,"column":6,"nodeType":"138","endLine":36,"endColumn":21,"suggestions":"143"},{"ruleId":"122","severity":1,"message":"144","line":3,"column":16,"nodeType":"124","messageId":"125","endLine":3,"endColumn":26},{"ruleId":"136","severity":1,"message":"145","line":24,"column":5,"nodeType":"138","endLine":24,"endColumn":18,"suggestions":"146"},{"ruleId":"136","severity":1,"message":"137","line":22,"column":6,"nodeType":"138","endLine":22,"endColumn":22,"suggestions":"147"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useMousePosition' is defined but never used.","no-native-reassign",["148"],"no-negated-in-lhs",["149"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["148"],["149"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleTab'. Either include it or remove the dependency array.","ArrayExpression",["150"],"'useHover' is defined but never used.","'setPortalHover' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'hoverbar', 'portalHover', 'setHoverbar', and 'sidebar'. Either include them or remove the dependency array. If 'setHoverbar' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["151"],"'InlineIcon' is defined but never used.","React Hook useEffect has an unnecessary dependency: 'ref.current'. Either exclude it or remove the dependency array. Mutable values like 'ref.current' aren't valid dependencies because mutating them doesn't re-render the component.",["152"],["153"],"no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"154","fix":"160"},"Update the dependencies array to be: [handleTab, location.state]",{"range":"161","text":"162"},"Update the dependencies array to be: [hoverbar, mousePosition, portalHover, setHoverbar, sidebar]",{"range":"163","text":"164"},"Update the dependencies array to be: []",{"range":"165","text":"166"},{"range":"167","text":"162"},[607,623],"[handleTab, location.state]",[1006,1021],"[hoverbar, mousePosition, portalHover, setHoverbar, sidebar]",[660,673],"[]",[683,699]]