[{"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\MainFrame.js":"1","C:\\Users\\jonat\\dekked-nav-bar\\src\\custom-hooks\\UseMousePosition.js":"2","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Toolbar.js":"3","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\FlashcardTab.js":"4","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetNotes.js":"5","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySet.js":"6","C:\\Users\\jonat\\dekked-nav-bar\\src\\App.js":"7","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\TextBlockData.js":"8","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\Sidebar.js":"9","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Settings.js":"10","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Account.js":"11","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlock.js":"12","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\ChangePassword.js":"13","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\SettingsData.js":"14","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\ProfileData.js":"15","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarBottom.js":"16","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Flashcard.js":"17","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\TopBar.js":"18","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarTop.js":"19","C:\\Users\\jonat\\dekked-nav-bar\\src\\custom-hooks\\useHover.js":"20","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetFlashcards.js":"21","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlockDots.js":"22","C:\\Users\\jonat\\dekked-nav-bar\\src\\index.js":"23","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\StudyQueue.tsx":"24","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Buttons\\Button.tsx":"25","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Portal.tsx":"26","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Block.js":"27","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\Card.tsx":"28","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\FolderBinder.tsx":"29","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\AddCard.tsx":"30","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\DeleteModal.tsx":"31"},{"size":1601,"mtime":1609532544017,"results":"32","hashOfConfig":"33"},{"size":435,"mtime":1609327753179,"results":"34","hashOfConfig":"33"},{"size":2462,"mtime":1609319659816,"results":"35","hashOfConfig":"33"},{"size":628,"mtime":1609251728847,"results":"36","hashOfConfig":"37"},{"size":682,"mtime":1609327168675,"results":"38","hashOfConfig":"37"},{"size":8667,"mtime":1609536633735,"results":"39","hashOfConfig":"33"},{"size":8771,"mtime":1609367801203,"results":"40","hashOfConfig":"37"},{"size":1729,"mtime":1609281196835,"results":"41","hashOfConfig":"37"},{"size":6123,"mtime":1609532525560,"results":"42","hashOfConfig":"33"},{"size":1468,"mtime":1609532602955,"results":"43","hashOfConfig":"33"},{"size":1792,"mtime":1609578067474,"results":"44","hashOfConfig":"33"},{"size":5794,"mtime":1609532566593,"results":"45","hashOfConfig":"33"},{"size":902,"mtime":1609281326930,"results":"46","hashOfConfig":"33"},{"size":341,"mtime":1609258260185,"results":"47","hashOfConfig":"37"},{"size":583,"mtime":1609532452361,"results":"48","hashOfConfig":"33"},{"size":2245,"mtime":1609532597370,"results":"49","hashOfConfig":"33"},{"size":1115,"mtime":1609327055009,"results":"50","hashOfConfig":"37"},{"size":7091,"mtime":1609532587707,"results":"51","hashOfConfig":"33"},{"size":2423,"mtime":1609532592664,"results":"52","hashOfConfig":"33"},{"size":744,"mtime":1609347839256,"results":"53","hashOfConfig":"37"},{"size":1231,"mtime":1609250662487,"results":"54","hashOfConfig":"37"},{"size":5284,"mtime":1609532558505,"results":"55","hashOfConfig":"33"},{"size":304,"mtime":1608373640131,"results":"56","hashOfConfig":"33"},{"size":1578,"mtime":1609579422650,"results":"57","hashOfConfig":"33"},{"size":425,"mtime":1609584574547,"results":"58","hashOfConfig":"33"},{"size":2143,"mtime":1609585425985,"results":"59","hashOfConfig":"33"},{"size":1183,"mtime":1609579629210,"results":"60","hashOfConfig":"33"},{"size":1645,"mtime":1609590056327,"results":"61","hashOfConfig":"33"},{"size":6057,"mtime":1609588761376,"results":"62","hashOfConfig":"33"},{"size":358,"mtime":1609584505094,"results":"63","hashOfConfig":"33"},{"size":748,"mtime":1609584560738,"results":"64","hashOfConfig":"33"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kqqhs6",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1mc2jll",{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"69"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"100"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\MainFrame.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\custom-hooks\\UseMousePosition.js",[],["137","138"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Toolbar.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\FlashcardTab.js",[],["139","140"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetNotes.js",["141"],"import React, { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nfunction StudySetNotes({ folderBlocks, handleFolderBlocks }) {\r\n  let location = useLocation();\r\n\r\n  const handleTab = () => {\r\n    const newFolderBlocksArray = folderBlocks.slice(); //make copy of array of folder blocks\r\n    newFolderBlocksArray[location.state.folderIndex].binders[\r\n      location.state.binderIndex\r\n    ].studySets[location.state.studySetIndex].tab = \"notes\"; // Invert folder block's open status\r\n    handleFolderBlocks(newFolderBlocksArray);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleTab();\r\n  }, [location.state]);\r\n\r\n  return <></>;\r\n}\r\n\r\nexport default StudySetNotes;\r\n","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySet.js",["142"],"import \"./StudySet.css\";\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport Toolbar from \"../StudySet/Toolbar\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport StudySetNotes from \"./StudySetNotes\";\r\nimport StudySetFlashcards from \"./StudySetFlashcards\";\r\nimport Button from \"../../Buttons/Button\";\r\nimport LinkedFlashcard from \"./LinkedFlashcard\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction StudySet({\r\n  folderBlocks,\r\n  handleNameChange,\r\n  handleFolderBlocks,\r\n}) {\r\n  let location = useLocation();\r\n  const titleRef = useRef();\r\n\r\n  const addFlashcard = () => {\r\n    const newFlashcard = {\r\n      id: uuidv4(),\r\n      type: \"\",\r\n      studySetId:\r\n        folderBlocks[location.state.folderIndex].binders[\r\n          location.state.binderIndex\r\n        ].studySets[location.state.studySetIndex].id,\r\n      binderId:\r\n        folderBlocks[location.state.folderIndex].binders[\r\n          location.state.binderIndex\r\n        ].id,\r\n      folderId: folderBlocks[location.state.folderIndex].id,\r\n    };\r\n    const newFolderBlocksArray = folderBlocks.slice();\r\n    newFolderBlocksArray[location.state.folderIndex].binders[\r\n      location.state.binderIndex\r\n    ].studySets[location.state.studySetIndex].flashcards.unshift(newFlashcard);\r\n    handleFolderBlocks(newFolderBlocksArray);\r\n  };\r\n\r\n  const deleteFlashcard = (index) => {\r\n    const newFolderBlocksArray = folderBlocks.slice();\r\n    newFolderBlocksArray[location.state.folderIndex].binders[\r\n      location.state.binderIndex\r\n    ].studySets[location.state.studySetIndex].flashcards.splice(index, 1);\r\n    handleFolderBlocks(newFolderBlocksArray);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (location.state && document.activeElement !== titleRef.current) {\r\n      if (location.state.type === \"folder\") {\r\n        titleRef.current.innerText =\r\n          folderBlocks[location.state.folderIndex].name;\r\n      } else if (location.state.type === \"binder\") {\r\n        titleRef.current.innerText =\r\n          folderBlocks[location.state.folderIndex].binders[\r\n            location.state.binderIndex\r\n          ].name;\r\n      } else if (location.state.type === \"studySet\") {\r\n        titleRef.current.innerText =\r\n          folderBlocks[location.state.folderIndex].binders[\r\n            location.state.binderIndex\r\n          ].studySets[location.state.studySetIndex].name;\r\n      }\r\n    }\r\n  }, [folderBlocks, location.state]);\r\n\r\n  return (\r\n    <>\r\n      {location.state ? (\r\n        <>\r\n          <div className=\"dekked-pageHeaderContainer studySet\">\r\n            <div className=\"dekked-pageHeader\">\r\n              <div id=\"toolbarTab\">\r\n                {location.state && location.state.tab === \"notes\" ? (\r\n                  <Toolbar type=\"full\" />\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n                <div id=\"studySetSwitcher\">\r\n                  {location.state ? (\r\n                    <>\r\n                      <NavLink\r\n                        activeStyle={{\r\n                          textDecoration: \"underline\",\r\n                          textDecorationColor: \"var(--primary-color)\",\r\n                          color: \"var(--main-black)!important\",\r\n                          fontWeight: \"700\",\r\n                          textDecorationThickness: \"2px\",\r\n                        }}\r\n                        to={{\r\n                          pathname: `/studySet/notes/${\r\n                            folderBlocks[location.state.folderIndex].binders[\r\n                              location.state.binderIndex\r\n                            ].studySets[location.state.studySetIndex].id\r\n                          }`,\r\n                          state: {\r\n                            name: location.state.name,\r\n                            type: location.state.type,\r\n                            folderIndex: location.state.folderIndex,\r\n                            binderIndex: location.state.binderIndex,\r\n                            studySetIndex: location.state.studySetIndex,\r\n                            tab: \"notes\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <span className=\"p1\">Notes</span>\r\n                      </NavLink>\r\n\r\n                      <NavLink\r\n                        activeStyle={{\r\n                          textDecoration: \"underline\",\r\n                          textDecorationColor: \"var(--primary-color)\",\r\n                          color: \"var(--main-black)\",\r\n                          fontWeight: \"700\",\r\n                          textDecorationThickness: \"2px\",\r\n                        }}\r\n                        to={{\r\n                          pathname: `/studySet/flashcards/${\r\n                            folderBlocks[location.state.folderIndex].binders[\r\n                              location.state.binderIndex\r\n                            ].studySets[location.state.studySetIndex].id\r\n                          }`,\r\n                          state: {\r\n                            name: location.state.name,\r\n                            type: location.state.type,\r\n                            folderIndex: location.state.folderIndex,\r\n                            binderIndex: location.state.binderIndex,\r\n                            studySetIndex: location.state.studySetIndex,\r\n                            tab: \"flashcards\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <span className=\"p1\">Flashcards</span>\r\n                      </NavLink>\r\n                    </>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n              <h2\r\n                contentEditable={true}\r\n                onDragOver={(e) => {\r\n                  e.preventDefault();\r\n                }}\r\n                onPaste={(e)=>{e.preventDefault();return false;}}\r\n                ref={titleRef}\r\n                spellCheck={false}\r\n                onKeyDown={(e) => {\r\n                  if (location.state) {\r\n                    if (e.key === \"Enter\") {\r\n                      e.preventDefault();\r\n                    }\r\n                    setTimeout(function () {\r\n                      handleNameChange(\r\n                        location.state.type,\r\n                        location.state.folderIndex,\r\n                        location.state.binderIndex,\r\n                        location.state.studySetIndex,\r\n                        titleRef.current.innerText\r\n                      );\r\n                    }, 100);\r\n                  }\r\n                }}\r\n              ></h2>\r\n              {location.state.tab === \"flashcards\" ? (\r\n                <div className=\"buttonQuantity studySet\">\r\n                  <span\r\n                    className=\"p2\"\r\n                    style={{ color: \"var(--grey-2)\", userSelect: \"none\" }}\r\n                  >\r\n                    {`${\r\n                      folderBlocks[location.state.folderIndex].binders[\r\n                        location.state.binderIndex\r\n                      ].studySets[location.state.studySetIndex].flashcards\r\n                        .length\r\n                    } Flashcard(s)`}\r\n                  </span>\r\n                  <div style={{ display: \"flex\" }}>\r\n                    <div style={{ marginRight: \"32px\" }}>\r\n                      <Button\r\n                        handleClick={addFlashcard}\r\n                        type=\"secondary\"\r\n                        action=\"Add flashcard\"\r\n                      />\r\n                    </div>\r\n                    <Button disabled type=\"primary\" action=\"Study\" />\r\n                  </div>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"dekked-pageContentContainer\">\r\n            <div className=\"dekked-pageContent studySet\">\r\n              {location.state.tab === \"notes\" ? (\r\n                <>\r\n                  <StudySetNotes\r\n                    handleFolderBlocks={handleFolderBlocks}\r\n                    folderBlocks={folderBlocks}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <StudySetFlashcards\r\n                  handleFolderBlocks={handleFolderBlocks}\r\n                  folderBlocks={folderBlocks}\r\n                  deleteFlashcard={deleteFlashcard}\r\n                />\r\n              )}\r\n            </div>\r\n            {location.state.tab === \"notes\" ? (\r\n              <div id=\"linkedFlashcardContainer\">\r\n                <LinkedFlashcard />\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default StudySet;\r\n","C:\\Users\\jonat\\dekked-nav-bar\\src\\App.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\TextBlockData.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\Sidebar.js",["143"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Settings.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Account.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlock.js",[],["144","145"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\ChangePassword.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\SettingsData.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\ProfileData.js",[],["146","147"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarBottom.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Flashcard.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\TopBar.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarTop.js",[],["148","149"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\custom-hooks\\useHover.js",["150"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetFlashcards.js",["151"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlockDots.js",["152"],"import React, { useState, useEffect } from \"react\";\r\nimport ColourPicker from \"./ColourPicker\";\r\nimport Block from \"../General/Block\";\r\nimport Portal from \"../General/Portal\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport * as Icons from \"react-icons/md\";\r\nimport { FolderData, BinderData, StudySetData } from \"./DropBlockMenuData\";\r\n\r\nfunction DropBlockDots({\r\n  item,\r\n  handleFolderBlocks,\r\n  folderBlocks,\r\n  handleRename,\r\n  handleDelete,\r\n  handleAddItem,\r\n  setIconColour,\r\n  iconColour,\r\n  studySetIndex,\r\n  folderIndex,\r\n  binderIndex,\r\n}) {\r\n  const dropBlockMenuData = item.type===\"folder\" ? FolderData : item.type===\"binder\" ? BinderData : StudySetData\r\n  const [coords, setCoords] = useState({}); // Set mouse coordinates\r\n  const [dropdownMenu, setDropdownMenu] = useState(false); // Set dropdown menu visibility\r\n  const [colourPicker, setColourPicker] = useState(false); // Set visibility of colour picker component\r\n  const [yPositionOfDropdownMenu, setYPositionofDropdownMenu] = useState(); // Set y position of dropdown menu\r\n  const heightOfDropdownMenu = 30 * dropBlockMenuData.length; // Value is necessary to position dropdown menu based on mouse coordinates\r\n  const heightOfColourPicker = 220; // Value is necessary to position colour picker based on mouse coordinates\r\n \r\n  const positionComponents = (e, itemHeight) => {\r\n    const rect = e.target.getBoundingClientRect();\r\n    let bottomValue = window.innerHeight - rect.y; // distance from mouse click to bottom of window\r\n    let topValue = rect.y; // distance from mouse click to top of window\r\n    setYPositionofDropdownMenu(topValue);\r\n\r\n    if (\r\n      bottomValue < 1.5 * heightOfColourPicker &&\r\n      topValue > heightOfColourPicker\r\n    )\r\n      setYPositionofDropdownMenu(topValue - heightOfColourPicker - 10);\r\n\r\n    if (bottomValue < 1.4 * itemHeight && topValue > itemHeight) {\r\n      topValue = rect.y - itemHeight - 10;\r\n    }\r\n\r\n    setCoords({\r\n      left: rect.x + rect.width / 2,\r\n      top: topValue,\r\n    });\r\n  };\r\n\r\n  const handleIconColour = (\r\n    type,\r\n    folderIndex,\r\n    binderIndex,\r\n    studySetIndex,\r\n    iconColour\r\n  ) => {\r\n    const newFolderBlocksArray = folderBlocks.slice();\r\n    if (type === \"folder\") {\r\n      newFolderBlocksArray[folderIndex].iconColour = iconColour;\r\n    } else if (type === \"binder\") {\r\n      newFolderBlocksArray[folderIndex].binders[\r\n        binderIndex\r\n      ].iconColour = iconColour;\r\n    } else if (type === \"studySet\") {\r\n      newFolderBlocksArray[folderIndex].binders[binderIndex].studySets[\r\n        studySetIndex\r\n      ].iconColour = iconColour;\r\n    }\r\n    handleFolderBlocks(newFolderBlocksArray);\r\n  };\r\n\r\n  const handleColourPicker = () => {\r\n    const newCoords = {\r\n      left: coords.left,\r\n      top: yPositionOfDropdownMenu,\r\n    };\r\n    setCoords(newCoords);\r\n    setColourPicker((prevState) => !prevState);\r\n  };\r\n\r\n  useEffect (() => {\r\n    handleIconColour(item.type, folderIndex, binderIndex, studySetIndex, iconColour)\r\n  }, [iconColour])\r\n\r\n  const handleDropdownMenu = (e) => {\r\n    positionComponents(e, heightOfDropdownMenu);\r\n    setDropdownMenu((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <div id=\"dropBlockDots\">\r\n      <Icons.MdMoreHoriz\r\n        className=\"icon active dots\"\r\n        onClick={(e) => {\r\n          handleDropdownMenu(e);\r\n        }}\r\n      ></Icons.MdMoreHoriz>\r\n      {dropdownMenu ? (\r\n        <Portal state={dropdownMenu} handleState={() => setDropdownMenu(false)}>\r\n          <div\r\n            onClick={() => setDropdownMenu(false)}\r\n            className=\"dropdownMenu dropBlocks\"\r\n            style={{ ...coords }}\r\n          >\r\n            {dropBlockMenuData.map((item, index) => {\r\n              return item.action === \"Delete\" ? (\r\n                <NavLink\r\n                  to={{\r\n                    pathname: `/${folderBlocks[0].type}/${folderBlocks[0].id}`,\r\n                    state: {\r\n                      type: \"folder\",\r\n                      folderIndex: \"0\",\r\n                    },\r\n                  }}\r\n                >\r\n                  <Block\r\n                    handleDelete={handleDelete}\r\n                    handleRename={handleRename}\r\n                    handleColourPicker={handleColourPicker}\r\n                    handleAddItem={handleAddItem}\r\n                    item={item}\r\n                    key={uuidv4()}\r\n                  />\r\n                </NavLink>\r\n              ) : (\r\n                <Block\r\n                  handleDelete={handleDelete}\r\n                  handleRename={handleRename}\r\n                  handleColourPicker={handleColourPicker}\r\n                  handleAddItem={handleAddItem}\r\n                  item={item}\r\n                  key={uuidv4()}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </Portal>\r\n      ) : null}\r\n      {colourPicker ? (\r\n        <Portal state={colourPicker} handleState={handleColourPicker}>\r\n          <div style={{ ...coords }} className=\"colourPicker\">\r\n            <ColourPicker\r\n              iconColour={iconColour}\r\n              setIconColour={setIconColour}\r\n            ></ColourPicker>\r\n          </div>\r\n        </Portal>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropBlockDots;\r\n","C:\\Users\\jonat\\dekked-nav-bar\\src\\index.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\StudyQueue.tsx",["153"],"import React, { useState } from \"react\";\r\nimport \"./StudyQueue.css\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport bookshelfIcon from \"@iconify/icons-mdi/bookshelf\";\r\nimport Portal from \"./Portal\";\r\nimport Button from \"../Buttons/Button\";\r\n\r\nconst  StudyQueue: React.FC = () => {\r\n  const [studyQueue, setStudyQueue] = useState<boolean>(false);\r\n  const [notifications, setNotifications] = useState<number>(0);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"studyQueue-container\">\r\n        <div className=\"studyQueueBubble-container\">\r\n          {notifications > 0 ? (\r\n            <div className=\"notificationBubble p2 bold\">{notifications}</div>\r\n          ) : null}\r\n          <div\r\n            className=\"studyQueueBubble primary\"\r\n            onClick={() => setStudyQueue((prevState) => !prevState)}\r\n          >\r\n            <Icon\r\n              className=\"icon StudyQueue\"\r\n              icon={bookshelfIcon}\r\n              style={{ color: \"white\", fontSize: \"24px\" }}\r\n            />\r\n          </div>\r\n          {studyQueue ? (\r\n            <Portal\r\n              state={studyQueue}\r\n              handleState={() => setStudyQueue((prevState) => !prevState)}\r\n            >\r\n              <div className=\"studyQueue dropdownMenu\">\r\n                <div className=\"items\"></div>\r\n                <div id=\"studyQueueButton\">\r\n                  <Button type=\"primary\" action=\"Study\" disabled={true}  />\r\n                </div>\r\n              </div>\r\n            </Portal>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default StudyQueue;\r\n",["154","155"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Buttons\\Button.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Portal.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Block.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\Card.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\FolderBinder.tsx",["156"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\AddCard.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\DeleteModal.tsx",[],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"157","replacedBy":"161"},{"ruleId":"159","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":17,"column":6,"nodeType":"165","endLine":17,"endColumn":22,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":140,"column":15,"nodeType":"169","endLine":164,"endColumn":16},{"ruleId":"163","severity":1,"message":"170","line":33,"column":6,"nodeType":"165","endLine":33,"endColumn":21,"suggestions":"171"},{"ruleId":"157","replacedBy":"172"},{"ruleId":"159","replacedBy":"173"},{"ruleId":"157","replacedBy":"174"},{"ruleId":"159","replacedBy":"175"},{"ruleId":"157","replacedBy":"176"},{"ruleId":"159","replacedBy":"177"},{"ruleId":"163","severity":1,"message":"178","line":24,"column":5,"nodeType":"165","endLine":24,"endColumn":18,"suggestions":"179"},{"ruleId":"163","severity":1,"message":"164","line":22,"column":6,"nodeType":"165","endLine":22,"endColumn":22,"suggestions":"180"},{"ruleId":"163","severity":1,"message":"181","line":86,"column":6,"nodeType":"165","endLine":86,"endColumn":18,"suggestions":"182"},{"ruleId":"183","severity":1,"message":"184","line":10,"column":25,"nodeType":"185","messageId":"186","endLine":10,"endColumn":41},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"167","severity":1,"message":"168","line":45,"column":15,"nodeType":"169","endLine":69,"endColumn":16},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],["187"],["188"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleTab'. Either include it or remove the dependency array.","ArrayExpression",["189"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'hoverbar', 'setHoverbar', and 'sidebar'. Either include them or remove the dependency array. If 'setHoverbar' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["190"],["187"],["188"],["187"],["188"],["187"],["188"],"React Hook useEffect has an unnecessary dependency: 'ref.current'. Either exclude it or remove the dependency array. Mutable values like 'ref.current' aren't valid dependencies because mutating them doesn't re-render the component.",["191"],["192"],"React Hook useEffect has missing dependencies: 'binderIndex', 'folderIndex', 'handleIconColour', 'item.type', and 'studySetIndex'. Either include them or remove the dependency array.",["193"],"@typescript-eslint/no-unused-vars","'setNotifications' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"194","fix":"200"},{"desc":"201","fix":"202"},"Update the dependencies array to be: [handleTab, location.state]",{"range":"203","text":"204"},"Update the dependencies array to be: [hoverbar, mousePosition, setHoverbar, sidebar]",{"range":"205","text":"206"},"Update the dependencies array to be: []",{"range":"207","text":"208"},{"range":"209","text":"204"},"Update the dependencies array to be: [binderIndex, folderIndex, handleIconColour, iconColour, item.type, studySetIndex]",{"range":"210","text":"211"},[607,623],"[handleTab, location.state]",[856,871],"[hoverbar, mousePosition, setHoverbar, sidebar]",[660,673],"[]",[683,699],[3042,3054],"[binderIndex, folderIndex, handleIconColour, iconColour, item.type, studySetIndex]"]