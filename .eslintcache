[{"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\FolderBinder.tsx":"1","C:\\Users\\jonat\\dekked-nav-bar\\src\\index.tsx":"2","C:\\Users\\jonat\\dekked-nav-bar\\src\\App.tsx":"3","C:\\Users\\jonat\\dekked-nav-bar\\src\\custom-hooks\\useMousePosition.tsx":"4","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Block\\Block.tsx":"5","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\DeleteModal\\DeleteModal.tsx":"6","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\LoadingSpinner\\LoadingSpinner.tsx":"7","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Settings\\Settings.tsx":"8","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Settings\\SettingsData.tsx":"9","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\ColourPicker\\ColourPicker.tsx":"10","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DeletedBlock\\DeletedBlock.tsx":"11","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarBottom\\SidebarBottom.tsx":"12","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlock\\DropBlockDots\\DropBlockDots.tsx":"13","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlock\\DropBlock\\DropBlock.tsx":"14","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarTop\\SidebarTop.tsx":"15","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarWorkspace\\SidebarWorkspace.tsx":"16","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarTop\\ProfileData.tsx":"17","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlock\\DropBlockDots\\DropBlockMenuData.tsx":"18","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Account\\Account\\Account.tsx":"19","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Account\\ChangePassword\\ChangePassword.tsx":"20","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\TopBar\\TopBar.tsx":"21","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Flashcard\\Flashcard.tsx":"22","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Flashcard Tab\\FlashcardTab.tsx":"23","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Toolbar\\TextBlockData.tsx":"24","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\TopBar\\Breadcrumbs\\Breadcrumbs.tsx":"25","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetTabs\\StudySetTabs.tsx":"26","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetFlashcards\\StudySetFlashcards.tsx":"27","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySet.tsx":"28","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\Sidebar.tsx":"29","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Buttons\\Button\\Button.tsx":"30","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Portal\\Portal.tsx":"31","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\PageTitle\\PageTitle.tsx":"32","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Linked Flashcard\\LinkedFlashcard.tsx":"33","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\MainFrame.tsx":"34","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Toolbar\\Toolbar.tsx":"35","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\StudyQueue\\StudyQueueBubble\\StudyQueueBubble.tsx":"36","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\StudyQueue\\StudyQueue.tsx":"37","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\Card\\Card.tsx":"38","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Scroller\\Scroller.tsx":"39","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetNotes\\StudySetNotes.tsx":"40","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\AddCard\\AddCard.tsx":"41","C:\\Users\\jonat\\dekked-nav-bar\\src\\custom-hooks\\UseResize.tsx":"42"},{"size":4985,"mtime":1610119586998,"results":"43","hashOfConfig":"44"},{"size":304,"mtime":1610134448282,"results":"45","hashOfConfig":"44"},{"size":9906,"mtime":1610123243561,"results":"46","hashOfConfig":"44"},{"size":461,"mtime":1609773033505,"results":"47","hashOfConfig":"44"},{"size":1469,"mtime":1609950783443,"results":"48","hashOfConfig":"44"},{"size":1034,"mtime":1610107144185,"results":"49","hashOfConfig":"44"},{"size":507,"mtime":1610029903608,"results":"50","hashOfConfig":"44"},{"size":1017,"mtime":1609962113659,"results":"51","hashOfConfig":"44"},{"size":348,"mtime":1609952295654,"results":"52","hashOfConfig":"44"},{"size":958,"mtime":1609955439926,"results":"53","hashOfConfig":"44"},{"size":2171,"mtime":1610106353508,"results":"54","hashOfConfig":"44"},{"size":2258,"mtime":1610106732904,"results":"55","hashOfConfig":"44"},{"size":6598,"mtime":1610055418163,"results":"56","hashOfConfig":"44"},{"size":6350,"mtime":1610034824818,"results":"57","hashOfConfig":"44"},{"size":2371,"mtime":1610105935788,"results":"58","hashOfConfig":"44"},{"size":4999,"mtime":1610106692628,"results":"59","hashOfConfig":"44"},{"size":597,"mtime":1609958406441,"results":"60","hashOfConfig":"44"},{"size":1633,"mtime":1609959115102,"results":"61","hashOfConfig":"44"},{"size":1928,"mtime":1609962133923,"results":"62","hashOfConfig":"44"},{"size":1271,"mtime":1610032276830,"results":"63","hashOfConfig":"44"},{"size":1598,"mtime":1610113102719,"results":"64","hashOfConfig":"44"},{"size":1278,"mtime":1610119250147,"results":"65","hashOfConfig":"44"},{"size":718,"mtime":1610107295220,"results":"66","hashOfConfig":"44"},{"size":1771,"mtime":1610011437686,"results":"67","hashOfConfig":"44"},{"size":6861,"mtime":1610114144393,"results":"68","hashOfConfig":"44"},{"size":3134,"mtime":1610107597140,"results":"69","hashOfConfig":"44"},{"size":2278,"mtime":1610114607783,"results":"70","hashOfConfig":"44"},{"size":5086,"mtime":1610188541579,"results":"71","hashOfConfig":"44"},{"size":3980,"mtime":1610143680571,"results":"72","hashOfConfig":"44"},{"size":426,"mtime":1610056123050,"results":"73","hashOfConfig":"44"},{"size":1553,"mtime":1610105738800,"results":"74","hashOfConfig":"44"},{"size":2727,"mtime":1610103162824,"results":"75","hashOfConfig":"44"},{"size":725,"mtime":1610185821829,"results":"76","hashOfConfig":"44"},{"size":2663,"mtime":1610188567467,"results":"77","hashOfConfig":"44"},{"size":2384,"mtime":1610111474672,"results":"78","hashOfConfig":"44"},{"size":1093,"mtime":1610110821694,"results":"79","hashOfConfig":"44"},{"size":696,"mtime":1610110831023,"results":"80","hashOfConfig":"44"},{"size":1488,"mtime":1610102910287,"results":"81","hashOfConfig":"44"},{"size":384,"mtime":1610110130904,"results":"82","hashOfConfig":"44"},{"size":1986,"mtime":1610188802261,"results":"83","hashOfConfig":"44"},{"size":365,"mtime":1610101486248,"results":"84","hashOfConfig":"44"},{"size":755,"mtime":1610188700177,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kqqhs6",{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\FolderBinder.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\index.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\App.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\custom-hooks\\useMousePosition.tsx",[],["178","179"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Block\\Block.tsx",[],["180","181"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\DeleteModal\\DeleteModal.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\LoadingSpinner\\LoadingSpinner.tsx",["182","183"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Settings\\Settings.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Settings\\SettingsData.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\ColourPicker\\ColourPicker.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DeletedBlock\\DeletedBlock.tsx",["184"],"import React, { useState } from \"react\";\r\nimport * as Icons from \"react-icons/md\";\r\nimport { ReactComponent as FolderIcon } from \"../../../custom-icons/folder.svg\";\r\nimport { ReactComponent as BinderIcon } from \"../../../custom-icons/binder.svg\";\r\nimport { ReactComponent as StudySetIcon } from \"../../../custom-icons/studyset.svg\";\r\nimport \"./DeletedBlock.css\";\r\nimport Portal from \"../../General/Portal/Portal\";\r\nimport DeleteModal from \"../../General/DeleteModal/DeleteModal\";\r\n\r\ninterface Props {\r\n  name: string;\r\n  type: string;\r\n  iconColour: string;\r\n  handleDeleteForever: () => void;\r\n  handleRestore: () => void;\r\n}\r\n\r\nconst DeletedBlock: React.FC<Props> = ({\r\n  name,\r\n  type,\r\n  iconColour,\r\n  handleDeleteForever,\r\n  handleRestore,\r\n}) => {\r\n  const [deleteModal, setDeleteModal] = useState<boolean>(false);\r\n\r\n  const handleDeleteModal = () => {\r\n    setDeleteModal((prevValue) => !prevValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"dekked-deletedBlock p2\" role=\"button\">\r\n        <div style={{ display: \"flex\" }}>\r\n          {type === \"folder\" ? (\r\n            <FolderIcon className={`icon ${type}`} fill={iconColour} />\r\n          ) : type === \"binder\" ? (\r\n            <BinderIcon className={`icon ${type}`} stroke={iconColour} />\r\n          ) : (\r\n            <StudySetIcon className={`icon ${type}`} stroke={iconColour} />\r\n          )}\r\n          <span>{name ? name : \"Untitled\"}</span>\r\n        </div>\r\n        <div style={{ display: \"flex\" }}>\r\n          <Icons.MdUndo\r\n            className=\"icon active restore\"\r\n            style={{ marginLeft: \"4px\" }}\r\n            onClick={handleRestore}\r\n          />\r\n          <Icons.MdDeleteForever\r\n            className=\"icon active deleteForever\"\r\n            style={{ marginLeft: \"0px\" }}\r\n            onClick={handleDeleteModal}\r\n          />\r\n        </div>\r\n      </div>\r\n      <DeleteModal\r\n        handleDelete={() => {\r\n          handleDeleteForever();\r\n          handleDeleteModal();\r\n        }}\r\n        handleCancel={handleDeleteModal}\r\n        handleDeleteModal={handleDeleteModal}\r\n        deleteModal={deleteModal}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeletedBlock;\r\n","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarBottom\\SidebarBottom.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlock\\DropBlockDots\\DropBlockDots.tsx",["185","186"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport ColourPicker from \"../../ColourPicker/ColourPicker\";\r\nimport Block from \"../../../General/Block/Block\";\r\nimport Portal from \"../../../General/Portal/Portal\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {MdMoreHoriz} from \"react-icons/md\";\r\nimport { FolderData, BinderData, StudySetData } from \"./DropBlockMenuData\";\r\n\r\ninterface Props {\r\n  item:any;\r\n  handleFolderBlocks: (newFolderBlocksArray:any) => void;\r\n  studySetIndex?:number;\r\n  binderIndex?:number;\r\n  folderIndex:number;\r\n  iconColour:string;\r\n  setIconColour: React.Dispatch<any>;\r\n  handleAddItem?: () => void;\r\n  handleDelete: () => void;\r\n  handleRename: () => void;\r\n  folderBlocks:{\r\n    name: string;\r\n    type: string;\r\n    id: string;\r\n    iconColour: string;\r\n    isOpen: boolean;\r\n    binders: {\r\n        name: string;\r\n        type: string;\r\n        id: string;\r\n        folderId: string;\r\n        iconColour: string;\r\n        isOpen: boolean;\r\n        studySets: {\r\n            name: string;\r\n            type: string;\r\n            id: string;\r\n            binderId:string;\r\n            folderId:string;\r\n            iconColour:string;\r\n            tab:string;\r\n            flashcards:{\r\n              type: string;\r\n              id: string;\r\n              front:string;\r\n              back:string;\r\n              studySetId:string\r\n              binderId:string;\r\n              folderId:string;\r\n            }[];\r\n        }[];\r\n    }[];\r\n  }[];\r\n\r\n}\r\n\r\nconst DropBlockDots:React.FC<Props> = ({\r\n  item,\r\n  handleFolderBlocks,\r\n  folderBlocks,\r\n  handleRename,\r\n  handleDelete,\r\n  handleAddItem,\r\n  setIconColour,\r\n  iconColour,\r\n  studySetIndex,\r\n  folderIndex,\r\n  binderIndex,\r\n}) => {\r\n  const dropBlockMenuData = item.type===\"folder\" ? FolderData : item.type===\"binder\" ? BinderData : StudySetData\r\n  const [coords, setCoords] = useState({left:0, top:0}); // Set mouse coordinates\r\n  const [dropdownMenu, setDropdownMenu] = useState(false); // Set dropdown menu visibility\r\n  const [colourPicker, setColourPicker] = useState(false); // Set visibility of colour picker component\r\n  const [yPositionOfDropdownMenu, setYPositionofDropdownMenu] = useState<number>(0); // Set y position of dropdown menu\r\n  const heightOfDropdownMenu = 30 * dropBlockMenuData.length; // Value is necessary to position dropdown menu based on mouse coordinates\r\n  const heightOfColourPicker = 220; // Value is necessary to position colour picker based on mouse coordinates\r\n \r\n  const titleRef = useRef()\r\n\r\n  const positionComponents = (e:any, itemHeight:number) => {\r\n    const rect = e.target.getBoundingClientRect();\r\n    let bottomValue = window.innerHeight - rect.y; // distance from mouse click to bottom of window\r\n    let topValue = rect.y; // distance from mouse click to top of window\r\n    setYPositionofDropdownMenu(topValue);\r\n\r\n    if (\r\n      bottomValue < 1.5 * heightOfColourPicker &&\r\n      topValue > heightOfColourPicker\r\n    )\r\n      setYPositionofDropdownMenu(topValue - heightOfColourPicker - 10);\r\n\r\n    if (bottomValue < 1.4 * itemHeight && topValue > itemHeight) {\r\n      topValue = rect.y - itemHeight - 10;\r\n    }\r\n\r\n    setCoords({\r\n      left: rect.x + rect.width / 2,\r\n      top: topValue,\r\n    });\r\n  };\r\n\r\n  const handleIconColour = (\r\n    type:string,\r\n    folderIndex:number,\r\n    iconColour:string,\r\n    binderIndex:any,\r\n    studySetIndex:any,\r\n  ) => {\r\n    const newFolderBlocksArray = folderBlocks.slice();\r\n    if (type === \"folder\" ) {\r\n      newFolderBlocksArray[folderIndex].iconColour = iconColour;\r\n    } else if (type === \"binder\") {\r\n      newFolderBlocksArray[folderIndex].binders[\r\n        binderIndex\r\n      ].iconColour = iconColour;\r\n    } else if (type === \"studySet\") {\r\n      newFolderBlocksArray[folderIndex].binders[binderIndex].studySets[\r\n        studySetIndex\r\n      ].iconColour = iconColour;\r\n    }\r\n    handleFolderBlocks(newFolderBlocksArray);\r\n  };\r\n\r\n  const handleColourPicker = () => {\r\n    const newCoords = {\r\n      left: coords.left,\r\n      top: yPositionOfDropdownMenu,\r\n    };\r\n    setCoords(newCoords);\r\n    setColourPicker((prevState) => !prevState);\r\n  };\r\n  \r\n  const handleDropdownMenu = (e:any) => {\r\n    positionComponents(e, heightOfDropdownMenu);\r\n    setDropdownMenu((prevState) => !prevState);\r\n  };\r\n  \r\n  useEffect (() => {\r\n    handleIconColour(item.type, folderIndex, iconColour, binderIndex, studySetIndex)\r\n  }, [iconColour])\r\n  \r\n  return (\r\n    <div id=\"dropBlockDots\">\r\n      <MdMoreHoriz\r\n        className=\"icon active dots\"\r\n        onClick={(e) => {\r\n          handleDropdownMenu(e);\r\n        }}\r\n      ></MdMoreHoriz>\r\n      {dropdownMenu ? (\r\n        <Portal state={dropdownMenu} handleState={() => setDropdownMenu(false)}>\r\n          <div\r\n            onClick={() => setDropdownMenu(false)}\r\n            className=\"dropdownMenu dropBlocks\"\r\n            style={{ ...coords }}\r\n          >\r\n            {dropBlockMenuData.map((item) => {\r\n              return item.action === \"Delete\" ? (\r\n                <NavLink\r\n                  to={{\r\n                    pathname: `/${folderBlocks[0].type}/${folderBlocks[0].id}`,\r\n                    state: {\r\n                      item: {name:folderBlocks[0].name, type:folderBlocks[0].type},\r\n                      folderIndex: \"0\",\r\n                    },\r\n                  }}\r\n                >\r\n                  <Block\r\n                    handleDelete={handleDelete}\r\n                    handleRename={handleRename}\r\n                    handleColourPicker={handleColourPicker}\r\n                    handleAddItem={handleAddItem}\r\n                    item={item}\r\n                    key={uuidv4()}\r\n                  />\r\n                </NavLink>\r\n              ) : (\r\n                <Block\r\n                  handleDelete={handleDelete}\r\n                  handleRename={handleRename}\r\n                  handleColourPicker={handleColourPicker}\r\n                  handleAddItem={handleAddItem}\r\n                  item={item}\r\n                  key={uuidv4()}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </Portal>\r\n      ) : null}\r\n      {colourPicker ? (\r\n        <Portal state={colourPicker} handleState={handleColourPicker}>\r\n          <div style={{ ...coords }} className=\"colourPicker\">\r\n            <ColourPicker\r\n              iconColour={iconColour}\r\n              setIconColour={setIconColour}\r\n            ></ColourPicker>\r\n          </div>\r\n        </Portal>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropBlockDots;\r\n","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlock\\DropBlock\\DropBlock.tsx",["187"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarTop\\SidebarTop.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarWorkspace\\SidebarWorkspace.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarTop\\ProfileData.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlock\\DropBlockDots\\DropBlockMenuData.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Account\\Account\\Account.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Account\\ChangePassword\\ChangePassword.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\TopBar\\TopBar.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Flashcard\\Flashcard.tsx",["188"],"import React from \"react\";\r\nimport \"./Flashcard.css\";\r\nimport Toolbar from \"../Toolbar/Toolbar\";\r\nimport { MdSave, MdDeleteForever } from \"react-icons/md\";\r\nimport Button from \"../../../Buttons/Button/Button\";\r\n\r\ninterface Props {\r\n  deleteFlashcard?: () => void;\r\n  index?: number;\r\n  link?: boolean; // determines whether flashcard is regular or linked i.e. true represents a linked flashcard\r\n}\r\n\r\nconst Flashcard: React.FC<Props> = ({ deleteFlashcard, index, link }) => {\r\n  return (\r\n    <div className=\"flashcard\">\r\n      <div className=\"flashcardHeader\">\r\n        {index ? <span className=\"p2\">{index}</span> : null}\r\n        <Toolbar />\r\n        {!link ? (\r\n          <MdDeleteForever\r\n            className=\"icon active delete\"\r\n            onClick={deleteFlashcard}\r\n          />\r\n        ) : null}\r\n      </div>\r\n      <div className=\"flashcardText\">\r\n        <div className=\"flashcardFront\">\r\n          <span className=\"p3 grey\">Front</span>\r\n        </div>\r\n        <div className=\"flashcardBack\">\r\n          <span className=\"p3 grey\">Back</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"flashcardFooter\">\r\n        {link ? <Button action=\"Save\" disabled={true} type=\"primary\" /> : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Flashcard;\r\n",["189","190"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Flashcard Tab\\FlashcardTab.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Toolbar\\TextBlockData.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\TopBar\\Breadcrumbs\\Breadcrumbs.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetTabs\\StudySetTabs.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetFlashcards\\StudySetFlashcards.tsx",["191"],"import React, { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport Flashcard from \"../Flashcard/Flashcard\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"./StudySetFlashcards.css\";\r\n\r\ninterface Props {\r\n  folderBlocks: {\r\n    name: string;\r\n    type: string;\r\n    id: string;\r\n    iconColour: string;\r\n    isOpen: boolean;\r\n    binders: {\r\n      name: string;\r\n      type: string;\r\n      id: string;\r\n      folderId: string;\r\n      iconColour: string;\r\n      isOpen: boolean;\r\n      studySets: {\r\n        name: string;\r\n        type: string;\r\n        id: string;\r\n        binderId: string;\r\n        folderId: string;\r\n        iconColour: string;\r\n        tab: string;\r\n        flashcards: {\r\n          id: string;\r\n          type: string;\r\n          front: string;\r\n          back: string;\r\n          studySetId: string;\r\n          binderId: string;\r\n          folderId: string;\r\n        }[];\r\n      }[];\r\n    }[];\r\n  }[];\r\n  handleFolderBlocks: (newFolderBlocksArray: any) => void;\r\n  deleteFlashcard: (index: number) => void;\r\n}\r\n\r\nconst StudySetFlashcards: React.FC<Props> = ({\r\n  folderBlocks,\r\n  handleFolderBlocks,\r\n  deleteFlashcard,\r\n}) => {\r\n  let location = useLocation<any>();\r\n\r\n  const handleTab = () => {\r\n    const newFolderBlocksArray = folderBlocks.slice(); //make copy of array of folder blocks\r\n    newFolderBlocksArray[location.state.folderIndex].binders[\r\n      location.state.binderIndex\r\n    ].studySets[location.state.studySetIndex].tab = \"flashcards\"; // Invert folder block's open status\r\n    handleFolderBlocks(newFolderBlocksArray);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleTab();\r\n  }, [location.state]);\r\n\r\n  return (\r\n    <div className=\"studySetFlashcards\">\r\n      {location.state\r\n        ? folderBlocks[location.state.folderIndex].binders[\r\n            location.state.binderIndex\r\n          ].studySets[location.state.studySetIndex].flashcards.map(\r\n            (item: any, index: number) => (\r\n              <Flashcard\r\n                deleteFlashcard={() => {\r\n                  deleteFlashcard(index);\r\n                }}\r\n                index={index + 1}\r\n                key={uuidv4()}\r\n              />\r\n            )\r\n          )\r\n        : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudySetFlashcards;\r\n","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySet.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\Sidebar.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Buttons\\Button\\Button.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Portal\\Portal.tsx",["192"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\PageTitle\\PageTitle.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Linked Flashcard\\LinkedFlashcard.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\MainFrame.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Toolbar\\Toolbar.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\StudyQueue\\StudyQueueBubble\\StudyQueueBubble.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\StudyQueue\\StudyQueue.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\Card\\Card.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Scroller\\Scroller.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetNotes\\StudySetNotes.tsx",["193"],"import React, { useLayoutEffect, useEffect, useRef } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport \"./StudySetNotes.css\";\r\nimport { useResize } from \"../../../../custom-hooks/UseResize\";\r\ninterface Props {\r\n  folderBlocks: {\r\n    name: string;\r\n    type: string;\r\n    id: string;\r\n    iconColour: string;\r\n    isOpen: boolean;\r\n    binders: {\r\n      name: string;\r\n      type: string;\r\n      id: string;\r\n      folderId: string;\r\n      iconColour: string;\r\n      isOpen: boolean;\r\n      studySets: {\r\n        name: string;\r\n        type: string;\r\n        id: string;\r\n        binderId: string;\r\n        folderId: string;\r\n        iconColour: string;\r\n        tab: string;\r\n        flashcards: {\r\n          id: string;\r\n          type: string;\r\n          front: string;\r\n          back: string;\r\n          studySetId: string;\r\n          binderId: string;\r\n          folderId: string;\r\n        }[];\r\n      }[];\r\n    }[];\r\n  }[];\r\n  handleFolderBlocks: (newFolderBlocksArray: any) => void;\r\n  setStudySetNotesWidth: any;\r\n  sidebar: boolean;\r\n}\r\n\r\nconst StudySetNotes: React.FC<Props> = ({\r\n  folderBlocks,\r\n  handleFolderBlocks,\r\n  setStudySetNotesWidth,\r\n  sidebar,\r\n}) => {\r\n  let location = useLocation<any>();\r\n  const ref = useRef<any>(null);\r\n  const { width } = useResize(ref, sidebar);\r\n\r\n  useLayoutEffect(() => {\r\n    setStudySetNotesWidth(width);\r\n  }, [width, setStudySetNotesWidth]);\r\n\r\n  const handleTab = () => {\r\n    const newFolderBlocksArray = folderBlocks.slice(); //make copy of array of folder blocks\r\n    newFolderBlocksArray[location.state.folderIndex].binders[\r\n      location.state.binderIndex\r\n    ].studySets[location.state.studySetIndex].tab = \"notes\"; // Invert folder block's open status\r\n    handleFolderBlocks(newFolderBlocksArray);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleTab();\r\n  }, [location.state]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"studySetNotes\" ref={ref}></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StudySetNotes;\r\n","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\AddCard\\AddCard.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\custom-hooks\\UseResize.tsx",[],{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"194","replacedBy":"198"},{"ruleId":"196","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":25},{"ruleId":"200","severity":1,"message":"204","line":1,"column":27,"nodeType":"202","messageId":"203","endLine":1,"endColumn":36},{"ruleId":"200","severity":1,"message":"205","line":7,"column":8,"nodeType":"202","messageId":"203","endLine":7,"endColumn":14},{"ruleId":"200","severity":1,"message":"206","line":78,"column":9,"nodeType":"202","messageId":"203","endLine":78,"endColumn":17},{"ruleId":"207","severity":1,"message":"208","line":140,"column":6,"nodeType":"209","endLine":140,"endColumn":18,"suggestions":"210"},{"ruleId":"207","severity":1,"message":"211","line":87,"column":6,"nodeType":"209","endLine":87,"endColumn":17,"suggestions":"212"},{"ruleId":"200","severity":1,"message":"213","line":4,"column":10,"nodeType":"202","messageId":"203","endLine":4,"endColumn":16},{"ruleId":"194","replacedBy":"214"},{"ruleId":"196","replacedBy":"215"},{"ruleId":"207","severity":1,"message":"216","line":62,"column":6,"nodeType":"209","endLine":62,"endColumn":22,"suggestions":"217"},{"ruleId":"207","severity":1,"message":"218","line":30,"column":6,"nodeType":"209","endLine":30,"endColumn":8,"suggestions":"219"},{"ruleId":"207","severity":1,"message":"216","line":68,"column":6,"nodeType":"209","endLine":68,"endColumn":22,"suggestions":"220"},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],["221"],["222"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Portal' is defined but never used.","'titleRef' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'binderIndex', 'folderIndex', 'handleIconColour', 'item.type', and 'studySetIndex'. Either include them or remove the dependency array.","ArrayExpression",["223"],"React Hook useEffect has a missing dependency: 'editableName'. Either include it or remove the dependency array.",["224"],"'MdSave' is defined but never used.",["221"],["222"],"React Hook useEffect has a missing dependency: 'handleTab'. Either include it or remove the dependency array.",["225"],"React Hook useEffect has a missing dependency: 'handleEscape'. Either include it or remove the dependency array.",["226"],["227"],"no-global-assign","no-unsafe-negation",{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"232","fix":"236"},"Update the dependencies array to be: [binderIndex, folderIndex, handleIconColour, iconColour, item.type, studySetIndex]",{"range":"237","text":"238"},"Update the dependencies array to be: [editableName, item.name]",{"range":"239","text":"240"},"Update the dependencies array to be: [handleTab, location.state]",{"range":"241","text":"242"},"Update the dependencies array to be: [handleEscape]",{"range":"243","text":"244"},{"range":"245","text":"242"},[4473,4485],"[binderIndex, folderIndex, handleIconColour, iconColour, item.type, studySetIndex]",[2387,2398],"[editableName, item.name]",[1643,1659],"[handleTab, location.state]",[809,811],"[handleEscape]",[1837,1853]]