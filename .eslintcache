[{"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\Card.tsx":"1","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\FolderBinder.tsx":"2","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\AddCard.tsx":"3","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Flashcard.tsx":"4","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Toolbar.tsx":"5","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\FlashcardTab.tsx":"6","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySet.tsx":"7","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetFlashcards.tsx":"8","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetNotes.tsx":"9","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\TextBlockData.tsx":"10","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\LinkedFlashcard.tsx":"11","C:\\Users\\jonat\\dekked-nav-bar\\src\\index.tsx":"12","C:\\Users\\jonat\\dekked-nav-bar\\src\\App.tsx":"13","C:\\Users\\jonat\\dekked-nav-bar\\src\\custom-hooks\\useMousePosition.tsx":"14","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetTabs.tsx":"15","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Block\\Block.tsx":"16","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\DeleteModal\\DeleteModal.tsx":"17","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\StudyQueue\\StudyQueue.tsx":"18","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\LoadingSpinner\\LoadingSpinner.tsx":"19","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Settings\\Settings.tsx":"20","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Settings\\SettingsData.tsx":"21","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\ColourPicker\\ColourPicker.tsx":"22","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DeletedBlock\\DeletedBlock.tsx":"23","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarBottom\\SidebarBottom.tsx":"24","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlock\\DropBlockDots\\DropBlockDots.tsx":"25","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlock\\DropBlock\\DropBlock.tsx":"26","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarTop\\SidebarTop.tsx":"27","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarWorkspace\\SidebarWorkspace.tsx":"28","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarTop\\ProfileData.tsx":"29","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlock\\DropBlockDots\\DropBlockMenuData.tsx":"30","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Account\\Account\\Account.tsx":"31","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Account\\ChangePassword\\ChangePassword.tsx":"32","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\TopBar\\TopBar.tsx":"33"},{"size":1646,"mtime":1609758614420,"results":"34","hashOfConfig":"35"},{"size":5441,"mtime":1609950675812,"results":"36","hashOfConfig":"35"},{"size":358,"mtime":1609584505094,"results":"37","hashOfConfig":"35"},{"size":1337,"mtime":1609757200773,"results":"38","hashOfConfig":"35"},{"size":2616,"mtime":1609773812862,"results":"39","hashOfConfig":"35"},{"size":706,"mtime":1609756419924,"results":"40","hashOfConfig":"35"},{"size":5521,"mtime":1609963437269,"results":"41","hashOfConfig":"35"},{"size":2182,"mtime":1609857557848,"results":"42","hashOfConfig":"35"},{"size":1577,"mtime":1609857620723,"results":"43","hashOfConfig":"35"},{"size":1771,"mtime":1609760067838,"results":"44","hashOfConfig":"35"},{"size":789,"mtime":1609756816645,"results":"45","hashOfConfig":"35"},{"size":304,"mtime":1609766304006,"results":"46","hashOfConfig":"35"},{"size":9714,"mtime":1609951372095,"results":"47","hashOfConfig":"35"},{"size":461,"mtime":1609773033505,"results":"48","hashOfConfig":"35"},{"size":3170,"mtime":1609937059798,"results":"49","hashOfConfig":"35"},{"size":1469,"mtime":1609950783443,"results":"50","hashOfConfig":"35"},{"size":758,"mtime":1609950902752,"results":"51","hashOfConfig":"35"},{"size":1455,"mtime":1609952192640,"results":"52","hashOfConfig":"35"},{"size":396,"mtime":1609951840803,"results":"53","hashOfConfig":"35"},{"size":1009,"mtime":1609954664107,"results":"54","hashOfConfig":"35"},{"size":348,"mtime":1609952295654,"results":"55","hashOfConfig":"35"},{"size":958,"mtime":1609955439926,"results":"56","hashOfConfig":"35"},{"size":2350,"mtime":1609959159447,"results":"57","hashOfConfig":"35"},{"size":2341,"mtime":1609962320391,"results":"58","hashOfConfig":"35"},{"size":6515,"mtime":1609960025011,"results":"59","hashOfConfig":"35"},{"size":6366,"mtime":1609959134925,"results":"60","hashOfConfig":"35"},{"size":2508,"mtime":1609958409238,"results":"61","hashOfConfig":"35"},{"size":5907,"mtime":1609962800366,"results":"62","hashOfConfig":"35"},{"size":597,"mtime":1609958406441,"results":"63","hashOfConfig":"35"},{"size":1633,"mtime":1609959115102,"results":"64","hashOfConfig":"35"},{"size":1913,"mtime":1609962113659,"results":"65","hashOfConfig":"35"},{"size":1135,"mtime":1609962133935,"results":"66","hashOfConfig":"35"},{"size":8047,"mtime":1609963554622,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"kqqhs6",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"73"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\Card.tsx",[],["143","144"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\FolderBinder.tsx",[],["145","146"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\FolderBinder\\AddCard.tsx",[],["147","148"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Flashcard.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\Toolbar.tsx",[],["149","150"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\FlashcardTab.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySet.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetFlashcards.tsx",["151"],"import React, { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport Flashcard from \"./Flashcard\";\r\n\r\ninterface Props {\r\n  folderBlocks:{\r\n    name: string;\r\n    type: string;\r\n    id: string;\r\n    iconColour: string;\r\n    isOpen: boolean;\r\n    binders: {\r\n        name: string;\r\n        type: string;\r\n        id: string;\r\n        folderId: string;\r\n        iconColour: string;\r\n        isOpen: boolean;\r\n        studySets: {\r\n            name: string;\r\n            type: string;\r\n            id: string;\r\n            binderId:string;\r\n            folderId:string;\r\n            iconColour:string;\r\n            tab:string;\r\n            flashcards: {\r\n              id:string;\r\n              type:string;\r\n              front:string;\r\n              back:string;\r\n              studySetId:string;\r\n              binderId:string;\r\n              folderId:string;\r\n            }[];\r\n        }[];\r\n    }[];\r\n  }[]\r\n  handleFolderBlocks: (newFolderBlocksArray:any) => void;\r\n  deleteFlashcard: (index:number) => void;\r\n}\r\n\r\nconst StudySetFlashcards: React.FC<Props> = ({\r\n  folderBlocks,\r\n  handleFolderBlocks,\r\n  deleteFlashcard,\r\n}) => {\r\n  let location = useLocation<any>();\r\n\r\n  const handleTab = () => {\r\n    const newFolderBlocksArray = folderBlocks.slice(); //make copy of array of folder blocks\r\n    newFolderBlocksArray[location.state.folderIndex].binders[\r\n      location.state.binderIndex\r\n    ].studySets[location.state.studySetIndex].tab = \"flashcards\"; // Invert folder block's open status\r\n    handleFolderBlocks(newFolderBlocksArray);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleTab();\r\n  }, [location.state]);\r\n\r\n  return (\r\n    <>\r\n      {location.state\r\n        ? folderBlocks[location.state.folderIndex].binders[\r\n            location.state.binderIndex\r\n          ].studySets[location.state.studySetIndex].flashcards.map(\r\n            (item:any, index:number) => (\r\n              <Flashcard\r\n                deleteFlashcard={() => {\r\n                  deleteFlashcard(index);\r\n                }}\r\n                index={index}\r\n              />\r\n            )\r\n          )\r\n        : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default StudySetFlashcards;\r\n","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetNotes.tsx",["152"],"import React, { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\ninterface Props {\r\n  folderBlocks:{\r\n    name: string;\r\n    type: string;\r\n    id: string;\r\n    iconColour: string;\r\n    isOpen: boolean;\r\n    binders: {\r\n        name: string;\r\n        type: string;\r\n        id: string;\r\n        folderId: string;\r\n        iconColour: string;\r\n        isOpen: boolean;\r\n        studySets: {\r\n            name: string;\r\n            type: string;\r\n            id: string;\r\n            binderId:string;\r\n            folderId:string;\r\n            iconColour:string;\r\n            tab:string;\r\n            flashcards: {\r\n              id:string;\r\n              type:string;\r\n              front:string;\r\n              back:string;\r\n              studySetId:string;\r\n              binderId:string;\r\n              folderId:string;\r\n            }[];\r\n        }[];\r\n    }[];\r\n  }[]\r\n  handleFolderBlocks: (newFolderBlocksArray:any) => void;\r\n}\r\n\r\nconst StudySetNotes:React.FC<Props> = ({ folderBlocks, handleFolderBlocks }) => {\r\n  let location = useLocation<any>();\r\n\r\n  const handleTab = () => {\r\n    const newFolderBlocksArray = folderBlocks.slice(); //make copy of array of folder blocks\r\n    newFolderBlocksArray[location.state.folderIndex].binders[\r\n      location.state.binderIndex\r\n    ].studySets[location.state.studySetIndex].tab = \"notes\"; // Invert folder block's open status\r\n    handleFolderBlocks(newFolderBlocksArray);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleTab();\r\n  }, [location.state]);\r\n\r\n  return <></>;\r\n}\r\n\r\nexport default StudySetNotes;\r\n","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\TextBlockData.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\LinkedFlashcard.tsx",[],["153","154"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\index.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\App.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\custom-hooks\\useMousePosition.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\StudySet\\StudySetTabs.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Block\\Block.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\DeleteModal\\DeleteModal.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\StudyQueue\\StudyQueue.tsx",["155"],"import React, { useState } from \"react\";\r\nimport \"./StudyQueue.css\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport bookshelfIcon from \"@iconify/icons-mdi/bookshelf\";\r\nimport Portal from \"../Portal/Portal\";\r\nimport Button from \"../../Buttons/Button/Button\";\r\n\r\nconst StudyQueue: React.FC = () => {\r\n  const [studyQueue, setStudyQueue] = useState<boolean>(false);\r\n  const [notifications, setNotifications] = useState<number>(0);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"studyQueueBubbleContainer\">\r\n        {notifications > 0 ? (\r\n          <div className=\"notificationBubble p2 bold\">{notifications}</div>\r\n        ) : null}\r\n        <div\r\n          className=\"studyQueueBubble primary\"\r\n          onClick={() => setStudyQueue((prevState) => !prevState)}\r\n        >\r\n          <Icon\r\n            className=\"icon StudyQueue\"\r\n            icon={bookshelfIcon}\r\n            style={{ color: \"white\", fontSize: \"24px\" }}\r\n          />\r\n        </div>\r\n      </div>\r\n      {studyQueue ? (\r\n        <Portal\r\n          state={studyQueue}\r\n          handleState={() => setStudyQueue((prevState) => !prevState)}\r\n        >\r\n          <div className=\"studyQueue dropdownMenu\">\r\n            <div className=\"srBlocks\"></div>\r\n            <div id=\"studyQueueButton\">\r\n              <Button type=\"primary\" action=\"Study\" disabled={true} />\r\n            </div>\r\n          </div>\r\n        </Portal>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StudyQueue;\r\n","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\LoadingSpinner\\LoadingSpinner.tsx",["156","157","158"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Settings\\Settings.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Settings\\SettingsData.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\ColourPicker\\ColourPicker.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DeletedBlock\\DeletedBlock.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarBottom\\SidebarBottom.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlock\\DropBlockDots\\DropBlockDots.tsx",["159"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlock\\DropBlock\\DropBlock.tsx",["160"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport * as Icons from \"react-icons/md\";\r\nimport \"./DropBlock.css\";\r\nimport { ReactComponent as FolderIcon } from \"../../../../custom-icons/folder.svg\";\r\nimport { ReactComponent as BinderIcon } from \"../../../../custom-icons/binder.svg\";\r\nimport { ReactComponent as StudySetIcon } from \"../../../../custom-icons/studyset.svg\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport DropBlockDots from \"../DropBlockDots/DropBlockDots\";\r\n\r\ninterface Props {\r\n  item: any;\r\n  folderIndex: number;\r\n  folderBlocks: {\r\n    name: string;\r\n    type: string;\r\n    id: string;\r\n    iconColour: string;\r\n    isOpen: boolean;\r\n    binders: {\r\n      name: string;\r\n      type: string;\r\n      id: string;\r\n      folderId: string;\r\n      iconColour: string;\r\n      isOpen: boolean;\r\n      studySets: {\r\n        name: string;\r\n        type: string;\r\n        id: string;\r\n        binderId: string;\r\n        folderId: string;\r\n        iconColour: string;\r\n        tab: string;\r\n        flashcards: {\r\n          type: string;\r\n          id: string;\r\n          front: string;\r\n          back: string;\r\n          studySetId: string;\r\n          binderId: string;\r\n          folderId: string;\r\n        }[];\r\n      }[];\r\n    }[];\r\n  }[];\r\n  handleFolderBlocks: (newFolderBlocksArray: any) => void;\r\n  handleNameChange: (\r\n    type: string,\r\n    folderIndex: number,\r\n    blockName: string,\r\n    binderIndex: any,\r\n    studySetIndex: any\r\n  ) => void;\r\n  handleDelete: () => void;\r\n  handleAddItem?: () => void;\r\n  binderIndex?: number;\r\n  studySetIndex?: number;\r\n}\r\n\r\nconst DropBlock: React.FC<Props> = ({\r\n  item,\r\n  folderIndex,\r\n  binderIndex,\r\n  studySetIndex,\r\n  folderBlocks,\r\n  handleFolderBlocks,\r\n  handleDelete,\r\n  handleAddItem,\r\n  handleNameChange,\r\n}) => {\r\n  const [editableName, setEditableName] = useState<boolean>(false);\r\n  const [iconColour, setIconColour] = useState(item.iconColour);\r\n  const nameRef = useRef<any>(null);\r\n\r\n  const handleRename = () => {\r\n    // Focus in on name of dropblock when being renamed (i.e. show text cursor)\r\n    setEditableName((prevValue) => !prevValue);\r\n    setTimeout(function () {\r\n      nameRef.current.focus();\r\n    }, 50);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Set name of dropblock using data from folder block\r\n    if (editableName === false) nameRef.current.innerText = item.name;\r\n  }, [item.name]);\r\n\r\n  useEffect(() => {\r\n    const updateEditableName = (e: any) => {\r\n      // When user clicks away from name, make sure the beginning of the name is shown\r\n      if (nameRef.current) {\r\n        nameRef.current.addEventListener(\"blur\", function () {\r\n          nameRef.current.scrollLeft = \"0px\";\r\n        });\r\n      }\r\n\r\n      // If user clicks outside of name of dropblock, turn off editability of name\r\n      if (editableName === true) {\r\n        if (!nameRef.current.contains(e.target)) {\r\n          setEditableName((prevValue) => !prevValue);\r\n        }\r\n      }\r\n    };\r\n    document.addEventListener(\"click\", updateEditableName);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"click\", updateEditableName);\r\n    };\r\n  }, [editableName]);\r\n\r\n  const openDropBlock = (\r\n    type: string,\r\n    folderIndex: number,\r\n    binderIndex: any\r\n  ) => {\r\n    const newFolderBlocksArray = folderBlocks.slice();\r\n    if (type === \"folder\")\r\n      newFolderBlocksArray[folderIndex].isOpen = !newFolderBlocksArray[\r\n        folderIndex\r\n      ].isOpen;\r\n    else {\r\n      newFolderBlocksArray[folderIndex].binders[\r\n        binderIndex\r\n      ].isOpen = !newFolderBlocksArray[folderIndex].binders[binderIndex].isOpen;\r\n    }\r\n\r\n    handleFolderBlocks(newFolderBlocksArray);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dekked-dropBlockContainer\">\r\n      <NavLink\r\n        activeStyle={{\r\n          background: \"var(--off-beige-clicked)\",\r\n          fontWeight: \"bold\",\r\n        }}\r\n        to={{\r\n          pathname: `${\r\n            item.type === \"studySet\"\r\n              ? `/${item.type}/${item.tab}/${item.id}`\r\n              : `/${item.type}/${item.id}`\r\n          }`,\r\n          state: {\r\n            type: item.type,\r\n            name: item.name,\r\n            folderIndex: folderIndex,\r\n            binderIndex: binderIndex,\r\n            studySetIndex: studySetIndex,\r\n            tab: item.tab,\r\n          },\r\n        }}\r\n      >\r\n        <div role=\"button\" className={`dekked-dropBlock ${item.type}`}>\r\n          {item.type !== \"studySet\" ? (\r\n            <div\r\n              className={\r\n                item.isOpen\r\n                  ? `icon active dropDownArrow down`\r\n                  : `icon active dropDownArrow right`\r\n              }\r\n              onClick={() => {\r\n                openDropBlock(item.type, folderIndex, binderIndex);\r\n              }}\r\n            >\r\n              <Icons.MdArrowDropDown />\r\n            </div>\r\n          ) : null}\r\n          <div className={`icon ${item.type}`}>\r\n            {item.type === \"folder\" ? (\r\n              <FolderIcon fill={iconColour} />\r\n            ) : item.type === \"binder\" ? (\r\n              <BinderIcon stroke={iconColour} />\r\n            ) : (\r\n              <StudySetIcon stroke={iconColour} />\r\n            )}\r\n          </div>\r\n          <span\r\n            ref={nameRef}\r\n            spellCheck=\"false\"\r\n            onKeyDown={(e) => {\r\n              if (e.key === \"Enter\") {\r\n                setEditableName((prevValue) => !prevValue);\r\n              }\r\n              setTimeout(function () {\r\n                handleNameChange(\r\n                  item.type,\r\n                  folderIndex,\r\n                  nameRef.current.innerText,\r\n                  binderIndex,\r\n                  studySetIndex\r\n                );\r\n              }, 100);\r\n            }}\r\n            contentEditable={editableName}\r\n            className=\"p2\"\r\n          ></span>\r\n        </div>\r\n      </NavLink>\r\n      <DropBlockDots\r\n        item={item}\r\n        handleFolderBlocks={handleFolderBlocks}\r\n        handleRename={handleRename}\r\n        handleDelete={handleDelete}\r\n        handleAddItem={handleAddItem}\r\n        setIconColour={setIconColour}\r\n        iconColour={iconColour}\r\n        folderBlocks={folderBlocks}\r\n        studySetIndex={studySetIndex}\r\n        folderIndex={folderIndex}\r\n        binderIndex={binderIndex}\r\n      ></DropBlockDots>\r\n    </div>\r\n  );\r\n};\r\nexport default DropBlock;\r\n","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarTop\\SidebarTop.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarWorkspace\\SidebarWorkspace.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\SidebarTop\\ProfileData.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Sidebar\\DropBlock\\DropBlockDots\\DropBlockMenuData.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Account\\Account\\Account.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\Settings\\Account\\ChangePassword\\ChangePassword.tsx",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\MainFrame\\TopBar\\TopBar.tsx",[],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"161","replacedBy":"165"},{"ruleId":"163","replacedBy":"166"},{"ruleId":"161","replacedBy":"167"},{"ruleId":"163","replacedBy":"168"},{"ruleId":"161","replacedBy":"169"},{"ruleId":"163","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":60,"column":6,"nodeType":"173","endLine":60,"endColumn":22,"suggestions":"174"},{"ruleId":"171","severity":1,"message":"172","line":54,"column":6,"nodeType":"173","endLine":54,"endColumn":22,"suggestions":"175"},{"ruleId":"161","replacedBy":"176"},{"ruleId":"163","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":10,"column":25,"nodeType":"180","messageId":"181","endLine":10,"endColumn":41},{"ruleId":"178","severity":1,"message":"182","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":25},{"ruleId":"178","severity":1,"message":"183","line":1,"column":27,"nodeType":"180","messageId":"181","endLine":1,"endColumn":36},{"ruleId":"184","severity":1,"message":"185","line":7,"column":63,"nodeType":"186","messageId":"187","endLine":7,"endColumn":65},{"ruleId":"171","severity":1,"message":"188","line":139,"column":6,"nodeType":"173","endLine":139,"endColumn":18,"suggestions":"189"},{"ruleId":"171","severity":1,"message":"190","line":87,"column":6,"nodeType":"173","endLine":87,"endColumn":17,"suggestions":"191"},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],["192"],["193"],["192"],["193"],["192"],["193"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleTab'. Either include it or remove the dependency array.","ArrayExpression",["194"],["195"],["192"],["193"],"@typescript-eslint/no-unused-vars","'setNotifications' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has missing dependencies: 'binderIndex', 'folderIndex', 'handleIconColour', 'item.type', and 'studySetIndex'. Either include them or remove the dependency array.",["196"],"React Hook useEffect has a missing dependency: 'editableName'. Either include it or remove the dependency array.",["197"],"no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"198","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},"Update the dependencies array to be: [handleTab, location.state]",{"range":"205","text":"206"},{"range":"207","text":"206"},"Update the dependencies array to be: [binderIndex, folderIndex, handleIconColour, iconColour, item.type, studySetIndex]",{"range":"208","text":"209"},"Update the dependencies array to be: [editableName, item.name]",{"range":"210","text":"211"},[1623,1639],"[handleTab, location.state]",[1502,1518],[4436,4448],"[binderIndex, folderIndex, handleIconColour, iconColour, item.type, studySetIndex]",[2387,2398],"[editableName, item.name]"]