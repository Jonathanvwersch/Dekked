[{"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\NavigationBar\\NavBar.js":"1","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Block.js":"2","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\NavigationBar\\AddBlock.js":"3","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\NavigationBar\\DropBlock.js":"4","C:\\Users\\jonat\\dekked-nav-bar\\src\\index.js":"5","C:\\Users\\jonat\\dekked-nav-bar\\src\\App.js":"6","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\NavigationBar\\AddBinderData.js":"7","C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Portal.js":"8"},{"size":3425,"mtime":1607178370749,"results":"9","hashOfConfig":"10"},{"size":669,"mtime":1607112287851,"results":"11","hashOfConfig":"10"},{"size":332,"mtime":1606924253439,"results":"12","hashOfConfig":"10"},{"size":3612,"mtime":1607194711667,"results":"13","hashOfConfig":"10"},{"size":304,"mtime":1607100708943,"results":"14","hashOfConfig":"10"},{"size":206,"mtime":1606991699389,"results":"15","hashOfConfig":"10"},{"size":1321,"mtime":1607169424213,"results":"16","hashOfConfig":"10"},{"size":691,"mtime":1607109177712,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mc2jll",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\NavigationBar\\NavBar.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Block.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\NavigationBar\\AddBlock.js",["35"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\NavigationBar\\DropBlock.js",["36"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport * as Icons from \"react-icons/md\";\r\nimport \"./DropBlock.css\";\r\nimport Block from \"../General/Block\";\r\nimport { AddBinderData } from \"./AddBinderData\";\r\nimport Portal from \"../General/Portal\";\r\n\r\nfunction DropBlock({ type, handleDelete, id }) {\r\n  const ref = useRef(null);\r\n  const [coords, setCoords] = useState({});\r\n  const [dropdownMenu, setDropdownMenu] = useState(false);\r\n  const [height, setHeight] = useState(window.innerHeight);\r\n  const [editableName, setEditableName] = useState(false);\r\n\r\n  const handleRename = () => {\r\n    setEditableName((prevValue) => !prevValue);\r\n    var div = document.querySelector(`p[id=\"${id}\"]`);\r\n    setTimeout(function () {\r\n      div.focus();\r\n    }, 0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const updateEditableName = (e) => {\r\n      document.querySelector(`p[id=\"${id}\"]`).addEventListener(\r\n        \"blur\",\r\n        function (e) {\r\n          this.scrollLeft = \"0px\";\r\n        },\r\n        true\r\n      );\r\n      if (editableName === true) {\r\n        if (!ref.current.contains(e.target)) {\r\n          setEditableName(false);\r\n        }\r\n      }\r\n    };\r\n    document.addEventListener(\"click\", updateEditableName);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"click\", updateEditableName);\r\n    };\r\n  }, [editableName]);\r\n\r\n  useEffect(() => {\r\n    const updateWindowDimensions = () => {\r\n      const newHeight = window.innerHeight;\r\n      setHeight(newHeight);\r\n    };\r\n\r\n    window.addEventListener(\"resize\", updateWindowDimensions);\r\n\r\n    return () => window.removeEventListener(\"resize\", updateWindowDimensions);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"DropBlock\">\r\n      <div className=\"icon dropDownArrow\">\r\n        <Icons.MdArrowDropDown />\r\n      </div>\r\n      <img className={`icon ${type}`} alt={type}></img>\r\n      <p\r\n        ref={ref}\r\n        id={id}\r\n        spellCheck=\"false\"\r\n        onKeyPress={(e) => {\r\n          if (e.key === \"Enter\") {\r\n            setEditableName(false);\r\n          }\r\n        }}\r\n        contentEditable={editableName}\r\n        className=\"p2\"\r\n      ></p>\r\n      <Icons.MdMoreHoriz\r\n        className=\"icon dots\"\r\n        onClick={(e) => {\r\n          const rect = e.target.getBoundingClientRect();\r\n          let bottomValue = height - rect.y;\r\n          let topValue = rect.y + window.scrollY;\r\n\r\n          if (bottomValue < 185) topValue = rect.y - 135;\r\n\r\n          setCoords({\r\n            left: rect.x + rect.width / 2,\r\n            top: topValue,\r\n            bottom: bottomValue,\r\n          });\r\n          setDropdownMenu((prevState) => !prevState);\r\n        }}\r\n      ></Icons.MdMoreHoriz>\r\n      {dropdownMenu ? (\r\n        <Portal\r\n          state={dropdownMenu}\r\n          handleState={() => setDropdownMenu((prevState) => !prevState)}\r\n        >\r\n          <div\r\n            onClick={() => setDropdownMenu((prevState) => !prevState)}\r\n            className=\"DropdownMenu\"\r\n            style={{ ...styles.popover, ...coords }}\r\n          >\r\n            {AddBinderData.map((item, index) => {\r\n              return (\r\n                <Block\r\n                  handleDelete={handleDelete}\r\n                  handleRename={handleRename}\r\n                  item={item}\r\n                  id={`${item} Block ${index}`}\r\n                  key={`${item} Block ${index}`}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </Portal>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  popover: {\r\n    position: \"absolute\",\r\n    transform: \"translate(0, 15px)\",\r\n  },\r\n};\r\n\r\nexport default DropBlock;\r\n","C:\\Users\\jonat\\dekked-nav-bar\\src\\index.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\App.js",["37"],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\NavigationBar\\AddBinderData.js",[],"C:\\Users\\jonat\\dekked-nav-bar\\src\\components\\General\\Portal.js",[],{"ruleId":"38","severity":1,"message":"39","line":1,"column":17,"nodeType":"40","messageId":"41","endLine":1,"endColumn":25},{"ruleId":"42","severity":1,"message":"43","line":43,"column":6,"nodeType":"44","endLine":43,"endColumn":20,"suggestions":"45"},{"ruleId":"38","severity":1,"message":"39","line":2,"column":17,"nodeType":"40","messageId":"41","endLine":2,"endColumn":25},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["46"],{"desc":"47","fix":"48"},"Update the dependencies array to be: [editableName, id]",{"range":"49","text":"50"},[1325,1339],"[editableName, id]"]